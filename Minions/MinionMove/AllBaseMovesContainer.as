package Minions.MinionMove
{
   import States.MinionMoveClasses;
   import States.MinionMoveID;
   import States.MinionType;
   import States.MinionVisualMoveID;
   import States.StatType;
   
   public class AllBaseMovesContainer
   {
       
      
      public var m_allMoves:Vector.<BaseMinionMove>;
      
      private var m_currFirstMinionMoveID:int;
      
      private var m_currMinionMoveClass:int;
      
      private var m_currMoveIconName:String;
      
      private var m_currMinionMoveVisuals:int;
      
      private var m_currMinionDOTMoveVisuals:int;
      
      private const m_armorModRate:Number = 0.66;
      
      public function AllBaseMovesContainer()
      {
         super();
         this.m_allMoves = new Vector.<BaseMinionMove>(MinionMoveID.NUM_OF_MOVES);
         this.CreateFireMoves();
         this.CreateElectricMoves();
         this.CreateNormalMoves();
         this.CreatePassiveMoves();
         this.CreateEarthMoves();
         this.CreateUndeadMoves();
         this.CreateDinoMoves();
         this.CreateGrassMoves();
         this.CreateWaterMoves();
         this.CreateIceMoves();
         this.CreateDemonMoves();
         this.CreateFlyingMoves();
         this.CreateHolyMoves();
         this.CreateRobotMoves();
         this.CreateTitanMoves();
      }
      

      

      
      private function CreateEarthMoves() : void
      {
         var _loc1_:BaseMinionMove = null;
         var _loc2_:Array = null;
         var _loc3_:Array = null;
         var _loc4_:Array = null;
         this.m_currMinionMoveClass = MinionMoveClasses.rock_throw;
         this.m_currFirstMinionMoveID = MinionMoveID.rock_throw_t1;
         this.m_currMoveIconName = "moveIcon_rockThrow";
         this.m_currMinionMoveVisuals = MinionVisualMoveID.VM_rock_throw;
         _loc1_ = this.old_EarthCM(0,"Rock Throw",25,0,4);
         _loc1_ = this.old_EarthCM(1,"Rock Throw  lv.2",35,0,8);
         _loc1_ = this.old_EarthCM(2,"Rock Throw  lv.3",45,0,18);
         _loc1_ = this.old_EarthCM(3,"Rock Throw  lv.4",55,0,24);
         _loc1_ = this.old_EarthCM(4,"Rock Tomb",80,0,35);
         this.m_currMinionMoveClass = MinionMoveClasses.rock_slide;
         this.m_currFirstMinionMoveID = MinionMoveID.rock_slide_t1;
         this.m_currMoveIconName = "moveIcon_rockSlide";
         this.m_currMinionMoveVisuals = MinionVisualMoveID.VISUALS_SameAsClass;
         _loc1_ = this.old_EarthCM(0,"Rock Slide",20,0,8,0,0,3,true);
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.old_EarthCM(1,"Rock Slide  lv.2",25,0,16,0,0,3,true);
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.old_EarthCM(2,"Rock Slide  lv.3",30,0,32,0,0,3,true);
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.old_EarthCM(3,"Rock Slide  lv.4",35,0,48,0,0,3,true);
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.old_EarthCM(4,"Avalanche",85,0,75,0,0,3,true);
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         this.m_currMinionMoveClass = MinionMoveClasses.destabilize;
         this.m_currFirstMinionMoveID = MinionMoveID.destabilize_t1;
         this.m_currMoveIconName = "moveIcon_destabalize";
         this.m_currMinionMoveVisuals = MinionVisualMoveID.VISUALS_SameAsClass;
         _loc1_ = this.old_EarthCM(0,"Destabilize",15,25,20,0,3,5);
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_.AddStatToDeBuff(StatType.STAT_SPEED);
         _loc1_.m_chanceToDeBuff = 50;
         _loc1_.m_stagesOfStatTypeToDeBuff = -1;
         _loc1_.m_doesHitEachEnemy = false;
         _loc1_ = this.old_EarthCM(1,"Destabilize  lv.2",20,30,30,0,3,5);
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_.AddStatToDeBuff(StatType.STAT_SPEED);
         _loc1_.m_chanceToDeBuff = 60;
         _loc1_.m_stagesOfStatTypeToDeBuff = -1;
         _loc1_.m_doesHitEachEnemy = false;
         _loc1_ = this.old_EarthCM(2,"Destabilize  lv.3",25,35,40,0,3,5);
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_.AddStatToDeBuff(StatType.STAT_SPEED);
         _loc1_.m_chanceToDeBuff = 70;
         _loc1_.m_stagesOfStatTypeToDeBuff = -1;
         _loc1_.m_doesHitEachEnemy = false;
         _loc1_ = this.old_EarthCM(3,"Destabilize  lv.4",30,40,75,0,3,5);
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_.AddStatToDeBuff(StatType.STAT_SPEED);
         _loc1_.m_chanceToDeBuff = 80;
         _loc1_.m_stagesOfStatTypeToDeBuff = -1;
         _loc1_.m_doesHitEachEnemy = false;
         _loc1_ = this.old_EarthCM(4,"Tetectonic Shift",45,55,125,0,3,5);
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_.AddStatToDeBuff(StatType.STAT_SPEED);
         _loc1_.m_chanceToDeBuff = 85;
         _loc1_.m_stagesOfStatTypeToDeBuff = -2;
         _loc1_.m_doesHitEachEnemy = false;
         this.m_currMinionMoveClass = MinionMoveClasses.earth_barrier;
         this.m_currFirstMinionMoveID = MinionMoveID.earth_barrier_t1;
         this.m_currMoveIconName = "moveIcon_earthBarrier";
         this.m_currMinionMoveVisuals = MinionVisualMoveID.VISUALS_SameAsClass;
         _loc1_ = this.old_EarthCM(0,"Earth Barrier",0,0,4,5,0,0,true);
         _loc1_.m_alliesItHits = 2;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.old_EarthCM(1,"Earth Barrier  lv.2",0,0,8,10,0,0,true);
         _loc1_.m_alliesItHits = 2;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.old_EarthCM(2,"Earth Barrier  lv.3",0,0,18,15,0,0,true);
         _loc1_.m_alliesItHits = 2;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.old_EarthCM(3,"Earth Barrier  lv.4",0,0,24,20,0,0,true);
         _loc1_.m_alliesItHits = 2;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.old_EarthCM(4,"Rock Barricade",0,0,35,20,0,0,true);
         _loc1_.m_alliesItHits = 3;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         this.m_currMinionMoveClass = MinionMoveClasses.taunt;
         this.m_currFirstMinionMoveID = MinionMoveID.taunt_t1;
         this.m_currMoveIconName = "moveIcon_taunt";
         this.m_currMinionMoveVisuals = MinionVisualMoveID.VISUALS_SameAsClass;
         _loc1_ = this.old_EarthCM(0,"Taunt",0,0,0,0,0,0);
         _loc1_.m_isPassive = true;
         _loc1_.m_percentageOfDamageThatGetsRedirectedAtMinion = 30;
         _loc1_.m_moveType = MinionType.TYPE_NONE;
         _loc1_ = this.old_EarthCM(1,"Taunt  lv.2",0,0,0,0,0,0);
         _loc1_.m_isPassive = true;
         _loc1_.m_percentageOfDamageThatGetsRedirectedAtMinion = 45;
         _loc1_.m_moveType = MinionType.TYPE_NONE;
         _loc1_ = this.old_EarthCM(2,"Taunt  lv.3",0,0,0,0,0,0);
         _loc1_.m_isPassive = true;
         _loc1_.m_percentageOfDamageThatGetsRedirectedAtMinion = 60;
         _loc1_.m_moveType = MinionType.TYPE_NONE;
         _loc1_ = this.old_EarthCM(3,"Taunt  lv.4",0,0,0,0,0,0);
         _loc1_.m_isPassive = true;
         _loc1_.m_percentageOfDamageThatGetsRedirectedAtMinion = 85;
         _loc1_.m_moveType = MinionType.TYPE_NONE;
         _loc1_ = this.old_EarthCM(4,"Torment",0,0,0,0,0,0);
         _loc1_.m_isPassive = true;
         _loc1_.m_percentageOfDamageThatGetsRedirectedAtMinion = 100;
         _loc1_.m_moveType = MinionType.TYPE_NONE;
         _loc2_ = new Array(4,8,18,24,35);
         _loc3_ = new Array(30,40,50,60,85);
         _loc4_ = new Array(5,10,10,15,40);
         _loc1_ = this.CreateMove("Rock Blast",_loc2_[0],MinionMoveClasses.rock_blast,MinionMoveID.rock_blast_t1,"moveIcon_rockBlast",MinionType.TYPE_EARTH,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_additionalRandomDamage = _loc4_[0];
         _loc1_.m_moveCoolDownTime = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_additionalRandomDamage = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_additionalRandomDamage = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_additionalRandomDamage = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Boulder Blast");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_additionalRandomDamage = _loc4_[4];
         _loc1_.m_moveCoolDownTime = 2;
         _loc2_ = new Array(10,20,35,55,80);
         _loc3_ = new Array(25,30,35,40,65);
         _loc4_ = new Array(10,15,20,25,35);
         _loc1_ = this.CreateMove("Stone Fall",_loc2_[0],MinionMoveClasses.stone_fall,MinionMoveID.stone_fall_t1,"moveIcon_stoneFall",MinionType.TYPE_EARTH,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_additionalRandomDamage = _loc4_[0];
         _loc1_.m_moveCoolDownTime = 1;
         _loc1_.m_enemiesItHits = 3;
         _loc1_.m_hitsRandomTargets = true;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_additionalRandomDamage = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_additionalRandomDamage = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_additionalRandomDamage = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Boulder Slam");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_additionalRandomDamage = _loc4_[4];
         _loc1_.m_moveCoolDownTime = 2;
         _loc2_ = new Array(10,20,35,55,80);
         _loc3_ = new Array(20,25,30,35,50);
         _loc4_ = new Array(0,0,0,0,0);
         _loc1_ = this.CreateMove("Mud Blast",_loc2_[0],MinionMoveClasses.mud_blast,MinionMoveID.mud_blast_t1,"moveIcon_mudBlast",MinionType.TYPE_EARTH,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_additionalRandomDamage = _loc4_[0];
         _loc1_.m_enemiesItHits = 3;
         _loc1_.AddStatToDeBuffFirstTime(StatType.STAT_SPEED,true,false,1,10);
         _loc1_.m_accuracy = 95;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_additionalRandomDamage = _loc4_[1];
         _loc1_.m_accuracy = 90;
         _loc1_.m_chanceToDeBuff = 15;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_additionalRandomDamage = _loc4_[2];
         _loc1_.m_chanceToDeBuff = 20;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_additionalRandomDamage = _loc4_[3];
         _loc1_.m_chanceToDeBuff = 25;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Slag Shot");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_additionalRandomDamage = _loc4_[4];
         _loc1_.m_chanceToDeBuff = 30;
         _loc2_ = new Array(9,18,35,50,73);
         _loc3_ = new Array(15,20,25,30,45);
         _loc4_ = new Array(0,0,0,0,0);
         _loc1_ = this.CreateMove("Earthquake",_loc2_[0],MinionMoveClasses.earthquake,MinionMoveID.earthquake_t1,"moveIcon_earthquake",MinionType.TYPE_EARTH,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_additionalRandomDamage = _loc4_[0];
         _loc1_.m_enemiesItHits = 5;
         _loc1_.m_doesHitEachEnemy = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_additionalRandomDamage = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_additionalRandomDamage = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_additionalRandomDamage = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Deepquake");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_additionalRandomDamage = _loc4_[4];
         _loc2_ = new Array(13,25,35,60,90);
         _loc3_ = new Array(20,25,30,35,50);
         _loc4_ = new Array(20,25,30,35,50);
         _loc1_ = this.CreateMove("Stonequake",_loc2_[0],MinionMoveClasses.stonequake,MinionMoveID.stonequake_t1,"moveIcon_stonequake",MinionType.TYPE_EARTH,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_additionalRandomDamage = _loc4_[0];
         _loc1_.m_enemiesItHits = 5;
         _loc1_.m_moveCoolDownTime = 1;
         _loc1_.m_doesHitEachEnemy = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_additionalRandomDamage = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_additionalRandomDamage = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_additionalRandomDamage = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Trembling Earth");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_additionalRandomDamage = _loc4_[4];
         _loc1_.m_moveCoolDownTime = 2;
         _loc2_ = new Array(2,4,9,12,20);
         _loc3_ = new Array(10 * this.m_armorModRate,20 * this.m_armorModRate,30 * this.m_armorModRate,50 * this.m_armorModRate,75 * this.m_armorModRate);
         _loc1_ = this.CreateMove("Earth Shield",_loc2_[0],MinionMoveClasses.earth_shield,MinionMoveID.earth_shield_t1,"moveIcon_earthShield",MinionType.TYPE_EARTH,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_armor = _loc3_[0];
         _loc1_.AddStatToBuffFirstTime(StatType.STAT_HEALTH,false,true,1,5);
         _loc1_.m_onlyHitsSelf = true;
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_armor = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_armor = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_armor = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Steel Shield");
         _loc1_.m_chanceToBuff = 10;
         _loc1_.m_armor = _loc3_[4];
         _loc2_ = new Array(5,10,20,30,50);
         _loc3_ = new Array(30 * this.m_armorModRate,40 * this.m_armorModRate,40 * this.m_armorModRate,45 * this.m_armorModRate,45 * this.m_armorModRate);
         _loc1_ = this.CreateMove("Chosen Earth",_loc2_[0],MinionMoveClasses.chosen_earth,MinionMoveID.chosen_earth_t1,"moveIcon_chosenEarth",MinionType.TYPE_EARTH,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_armor = _loc3_[0];
         _loc1_.m_alliesItHits = 1;
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_overTimeTurnsActive = 2;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_armor = _loc3_[1];
         _loc1_.m_alliesItHits = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_armor = _loc3_[2];
         _loc1_.m_alliesItHits = 2;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_armor = _loc3_[3];
         _loc1_.m_alliesItHits = 2;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Directed Earth");
         _loc1_.m_alliesItHits = 3;
         _loc1_.m_armor = _loc3_[4];
         _loc2_ = new Array(20,35,50,80,110);
         _loc3_ = new Array(10 * this.m_armorModRate,15 * this.m_armorModRate,20 * this.m_armorModRate,25 * this.m_armorModRate,35 * this.m_armorModRate);
         _loc1_ = this.CreateMove("Earthy Fortitude",_loc2_[0],MinionMoveClasses.earthy_fortitude,MinionMoveID.earthy_fortitude_t1,"moveIcon_earthyFortitude",MinionType.TYPE_EARTH,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_armor = _loc3_[0];
         _loc1_.m_overTimeTurnsActive = 2;
         _loc1_.AddStatToBuffFirstTime(StatType.STAT_HEALTH,true,false,1,5);
         _loc1_.m_alliesItHits = 5;
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_moveCoolDownTime = 2;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_armor = _loc3_[1];
         _loc1_.m_chanceToBuff = 10;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_armor = _loc3_[2];
         _loc1_.m_chanceToBuff = 15;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_armor = _loc3_[3];
         _loc1_.m_chanceToBuff = 25;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Steel Shield");
         _loc1_.m_chanceToBuff = 10;
         _loc1_.m_armor = _loc3_[4];
         _loc1_.m_chanceToBuff = 50;
      }
      
      private function CreateUndeadMoves() : void
      {
         var _loc1_:BaseMinionMove = null;
         var _loc2_:Array = null;
         var _loc3_:Array = null;
         var _loc4_:Array = null;
         var _loc5_:Array = null;
         _loc2_ = new Array(2,5,15,20,30);
         _loc3_ = new Array(15,20,25,30,50);
         _loc1_ = this.CreateMove("Haunt",_loc2_[0],MinionMoveClasses.haunt,MinionMoveID.haunt_t1,"moveIcon_haunt",MinionType.TYPE_UNDEAD,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_DOTDamage = _loc3_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_DOTDamage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_DOTDamage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_DOTDamage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Horror");
         _loc1_.m_DOTDamage = _loc3_[4];
         _loc1_.m_additionalDOTDamage = 20;
         _loc2_ = new Array(3,7,18,23,30);
         _loc3_ = new Array(20,25,30,45,60);
         _loc1_ = this.CreateMove("Phantom Strike",_loc2_[0],MinionMoveClasses.phantom_strike,MinionMoveID.phantom_strike_t1,"moveIcon_phantomStrike",MinionType.TYPE_UNDEAD,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_DOTDamage = _loc3_[0];
         _loc1_.m_damage = 5;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_DOTDamage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_DOTDamage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_DOTDamage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Phantom Slam");
         _loc1_.m_DOTDamage = _loc3_[4];
         _loc1_.m_damage = 15;
         _loc2_ = new Array(3,8,20,24,33);
         _loc3_ = new Array(0,0,0,0,0);
         _loc4_ = new Array(10,15,20,25,35);
         _loc5_ = new Array(20,25,30,35,65);
         _loc1_ = this.CreateMove("Infest",_loc2_[0],MinionMoveClasses.infest,MinionMoveID.infes_t1,"moveIcon_infest",MinionType.TYPE_UNDEAD,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_DOTDamage = _loc4_[0];
         _loc1_.m_additionalDOTDamage = _loc5_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_DOTDamage = _loc4_[1];
         _loc1_.m_additionalDOTDamage = _loc5_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_DOTDamage = _loc4_[2];
         _loc1_.m_additionalDOTDamage = _loc5_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_DOTDamage = _loc4_[3];
         _loc1_.m_additionalDOTDamage = _loc5_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Afflict");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_DOTDamage = _loc4_[4];
         _loc1_.m_additionalDOTDamage = _loc5_[4];
         _loc2_ = new Array(2,5,15,20,30);
         _loc3_ = new Array(15,20,25,30,40);
         _loc4_ = new Array(5,10,15,20,30);
         _loc5_ = new Array(0,0,0,0,0);
         _loc1_ = this.CreateMove("Rancid Bite",_loc2_[0],MinionMoveClasses.rancid_bite,MinionMoveID.rancid_bite_t1,"moveIcon_rancidBite",MinionType.TYPE_UNDEAD,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_DOTDamage = _loc4_[0];
         _loc1_.m_additionalDOTDamage = _loc5_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_DOTDamage = _loc4_[1];
         _loc1_.m_additionalDOTDamage = _loc5_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_DOTDamage = _loc4_[2];
         _loc1_.m_additionalDOTDamage = _loc5_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_DOTDamage = _loc4_[3];
         _loc1_.m_additionalDOTDamage = _loc5_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Septic Chomp");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_DOTDamage = _loc4_[4];
         _loc1_.m_additionalDOTDamage = _loc5_[4];
         _loc2_ = new Array(15,35,55,80,125);
         _loc3_ = new Array(40,60,90,120,175);
         _loc1_ = this.CreateMove("Mortify",_loc2_[0],MinionMoveClasses.mortify,MinionMoveID.mortify_t1,"moveIcon_mortify",MinionType.TYPE_UNDEAD,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_DOTDamage = _loc3_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_DOTDamage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_DOTDamage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_DOTDamage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Vex");
         _loc1_.m_DOTDamage = _loc3_[4];
         _loc2_ = new Array(3,8,15,20,25);
         _loc3_ = new Array(40,50,60,70,100);
         _loc4_ = new Array(10,15,20,25,30);
         _loc1_ = this.CreateMove("Lich Burn",_loc2_[0],MinionMoveClasses.lich_burn,MinionMoveID.lich_burn_t1,"moveIcon_lichBurn",MinionType.TYPE_UNDEAD,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_selfDamage = _loc4_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_selfDamage = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_selfDamage = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_selfDamage = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Lich Fire");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_selfDamage = _loc4_[4];
         _loc2_ = new Array(3,8,15,20,25);
         _loc3_ = new Array(10,15,20,25,30);
         _loc4_ = new Array(20,25,30,35,50);
         _loc5_ = new Array(30,35,40,45,70);
         _loc1_ = this.CreateMove("Dread Transfer",_loc2_[0],MinionMoveClasses.dread_transfer,MinionMoveID.dread_transfer_t1,"moveIcon_deadTransfer",MinionType.TYPE_UNDEAD,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_selfDamage = _loc3_[0];
         _loc1_.m_DOTDamage = _loc4_[0];
         _loc1_.m_additionalDOTDamage = _loc5_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_selfDamage = _loc3_[1];
         _loc1_.m_DOTDamage = _loc4_[1];
         _loc1_.m_additionalDOTDamage = _loc5_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_selfDamage = _loc3_[2];
         _loc1_.m_DOTDamage = _loc4_[2];
         _loc1_.m_additionalDOTDamage = _loc5_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_selfDamage = _loc3_[3];
         _loc1_.m_DOTDamage = _loc4_[3];
         _loc1_.m_additionalDOTDamage = _loc5_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Dread Transfusion");
         _loc1_.m_selfDamage = _loc3_[4];
         _loc1_.m_DOTDamage = _loc4_[4];
         _loc1_.m_additionalDOTDamage = _loc5_[4];
         _loc2_ = new Array(1,1,1,1,1);
         _loc3_ = new Array(0,0,0,0,0);
         _loc4_ = new Array(0,0,0,0,0);
         _loc5_ = new Array(0,0,0,0,0);
         _loc1_ = this.CreateMove("Flesh Sacrifice",_loc2_[0],MinionMoveClasses.flesh_sacrifice,MinionMoveID.flesh_sacrifice_t1,"moveIcon_fleshSacrifice",MinionType.TYPE_UNDEAD,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_selfDamage = 30;
         _loc1_.AddStatToBuffFirstTime(StatType.STAT_ATTACK,false,true);
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_.m_onlyHitsSelf = true;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_selfDamage = 45;
         _loc1_.m_stagesOfStatTypeToBuff = 2;
         _loc1_.m_moveCoolDownTime = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_selfDamage = 60;
         _loc1_.m_stagesOfStatTypeToBuff = 4;
         _loc1_.m_moveCoolDownTime = 2;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_selfDamage = 75;
         _loc1_.m_stagesOfStatTypeToBuff = 6;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Pound of Flesh");
         _loc1_.m_selfDamage = 100;
         _loc1_.m_stagesOfStatTypeToBuff = 8;
         _loc2_ = new Array(10,18,25,30,55);
         _loc3_ = new Array(2,3,4,5,5);
         _loc1_ = this.CreateMove("Skin Trap",_loc2_[0],MinionMoveClasses.skin_trap,MinionMoveID.skin_trap_t1,"moveIcon_skinTrap",MinionType.TYPE_UNDEAD,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_enemiesItHits = _loc3_[0];
         _loc1_.AddStatToDeBuffFirstTime(StatType.STAT_SPEED,true,false);
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_enemiesItHits = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_enemiesItHits = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_enemiesItHits = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Flesh Trap");
         _loc1_.m_enemiesItHits = _loc3_[4];
         _loc1_.m_stagesOfStatTypeToDeBuff = -2;
         _loc2_ = new Array(10,18,25,30,55);
         _loc3_ = new Array(1,2,3,3,5);
         _loc1_ = this.CreateMove("Demoralize",_loc2_[0],MinionMoveClasses.demoralize,MinionMoveID.demoralize_t1,"moveIcon_demoralize",MinionType.TYPE_UNDEAD,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_enemiesItHits = _loc3_[0];
         _loc1_.AddStatToDeBuffFirstTime(StatType.STAT_SPEED,true,false);
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_.AddStatToDeBuff(StatType.STAT_HEALING);
         _loc1_.m_selfDamage = 40;
         _loc1_.m_hitsRandomTargets = true;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_enemiesItHits = _loc3_[1];
         _loc1_.m_selfDamage = 55;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_enemiesItHits = _loc3_[2];
         _loc1_.m_selfDamage = 70;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_enemiesItHits = _loc3_[3];
         _loc1_.m_stagesOfStatTypeToDeBuff = -2;
         _loc1_.m_selfDamage = 100;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Flesh Trap");
         _loc1_.m_enemiesItHits = _loc3_[4];
         _loc1_.m_stagesOfStatTypeToDeBuff = -3;
         _loc1_.m_selfDamage = 150;
         _loc2_ = new Array(10,18,25,30,55);
         _loc3_ = new Array(-1,-2,-3,-4,-6);
         _loc1_ = this.CreateMove("Lifeless Touch",_loc2_[0],MinionMoveClasses.lifeless_touch,MinionMoveID.lifeless_touch_t1,"moveIcon_lifelessTouch",MinionType.TYPE_UNDEAD,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.AddStatToDeBuffFirstTime(StatType.STAT_HEALING,true,false);
         _loc1_.m_enemiesItHits = 3;
         _loc1_.m_hitsRandomTargets = true;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Grave Clutch");
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[4];
         _loc2_ = new Array(10,18,25,30,55);
         _loc3_ = new Array(-1,-2,-3,-4,-6);
         _loc1_ = this.CreateMove("Ashen Reminder",_loc2_[0],MinionMoveClasses.ashen_reminder,MinionMoveID.ashen_reminder_t1,"moveIcon_ashenReminder",MinionType.TYPE_UNDEAD,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_enemiesItHits = 3;
         _loc1_.AddStatToDeBuffFirstTime(StatType.STAT_SPEED,true,false);
         _loc1_.AddStatToDeBuff(StatType.STAT_HEALING);
         _loc1_.m_selfDamage = 40;
         _loc1_.m_hitsRandomTargets = true;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[1];
         _loc1_.m_selfDamage = 55;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[2];
         _loc1_.m_selfDamage = 70;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[3];
         _loc1_.m_selfDamage = 100;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Shadow Press");
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[4];
         _loc1_.m_selfDamage = 150;
         _loc2_ = new Array(3,8,15,20,25);
         _loc3_ = new Array(15,20,25,30,35);
         _loc1_ = this.CreateMove("Deathly Energy",_loc2_[0],MinionMoveClasses.deathly_energy,MinionMoveID.deathly_energy_t1,"moveIcon_deathlyEnergy",MinionType.TYPE_UNDEAD,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_HOTHealing = _loc3_[0];
         _loc1_.m_alliesItHits = 1;
         _loc1_.m_enemiesItHits = 0;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_HOTHealing = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_HOTHealing = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_HOTHealing = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Dark Energy");
         _loc1_.m_HOTHealing = _loc3_[4];
         _loc1_.m_healing = 20;
      }
      
      private function CreateDinoMoves() : void
      {
         var _loc1_:BaseMinionMove = null;
         var _loc2_:Array = null;
         var _loc3_:Array = null;
         var _loc4_:Array = null;
         _loc2_ = new Array(5,10,18,25,45);
         _loc3_ = new Array(25,35,45,55,100);
         _loc4_ = new Array(0,0,0,0,0);
         _loc1_ = this.CreateMove("Prehistoric Bite",_loc2_[0],MinionMoveClasses.prehistoric_bite,MinionMoveID.prehistoric_bite_t1,"moveIcon_prehistoricBite",MinionType.TYPE_DINO,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_additionalRandomDamage = _loc4_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_additionalRandomDamage = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_additionalRandomDamage = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_additionalRandomDamage = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Jurassic Bite");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_additionalRandomDamage = _loc4_[4];
         _loc2_ = new Array(8,12,20,30,50);
         _loc3_ = new Array(25,35,45,50,90);
         _loc4_ = new Array(10,15,20,25,35);
         _loc1_ = this.CreateMove("Bone Crunch",_loc2_[0],MinionMoveClasses.bone_crunch,MinionMoveID.bone_crunch_t1,"moveIcon_boneCrunch",MinionType.TYPE_DINO,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_additionalRandomDamage = _loc4_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_additionalRandomDamage = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_additionalRandomDamage = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_additionalRandomDamage = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Fossil Breaker");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_additionalRandomDamage = _loc4_[4];
         _loc2_ = new Array(8,18,25,30,50);
         _loc3_ = new Array(50,75,100,125,200);
         _loc4_ = new Array(0,0,0,0,0);
         _loc1_ = this.CreateMove("Focused Charge",_loc2_[0],MinionMoveClasses.focused_charge,MinionMoveID.focused_charge_t1,"moveIcon_focusedCharge",MinionType.TYPE_DINO,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_chargeTime = 1;
         _loc1_.m_additionalRandomDamage = _loc4_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_additionalRandomDamage = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_additionalRandomDamage = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_additionalRandomDamage = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Focused Stampede");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_additionalRandomDamage = _loc4_[4];
         _loc2_ = new Array(12,20,30,40,65);
         _loc3_ = new Array(40,60,75,100,150);
         _loc4_ = new Array(25,30,40,50,60);
         _loc1_ = this.CreateMove("Demoralizing Charge",_loc2_[0],MinionMoveClasses.demoralizing_charge,MinionMoveID.demoralizing_charge_t1,"moveIcon_demoralizingCharge",MinionType.TYPE_DINO,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_chargeTime = 1;
         _loc1_.m_additionalRandomDamage = _loc4_[0];
         _loc1_.AddStatToDeBuffFirstTime(StatType.STAT_ATTACK,true,false,1,15);
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_additionalRandomDamage = _loc4_[1];
         _loc1_.m_chanceToDeBuff = 25;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_additionalRandomDamage = _loc4_[2];
         _loc1_.m_chanceToDeBuff = 35;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_additionalRandomDamage = _loc4_[3];
         _loc1_.m_chanceToDeBuff = 45;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Demoralizing Assault");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_additionalRandomDamage = _loc4_[4];
         _loc1_.m_chanceToDeBuff = 70;
         _loc1_.AddStatToDeBuff(StatType.STAT_SPEED);
         _loc2_ = new Array(8,18,25,30,50);
         _loc3_ = new Array(40,65,90,115,150);
         _loc4_ = new Array(0,0,0,0,0);
         _loc1_ = this.CreateMove("Piercing Charge",_loc2_[0],MinionMoveClasses.piercing_charge,MinionMoveID.piercing_charge_t1,"moveIcon_piercingCharge",MinionType.TYPE_DINO,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_chargeTime = 1;
         _loc1_.m_additionalRandomDamage = _loc4_[0];
         _loc1_.AddStatToDeBuffFirstTime(StatType.STAT_ATTACK,true,true,1);
         _loc1_.m_armor = -5;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_additionalRandomDamage = _loc4_[1];
         _loc1_.m_armor = -10;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_additionalRandomDamage = _loc4_[2];
         _loc1_.m_armor = -15;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_additionalRandomDamage = _loc4_[3];
         _loc1_.m_armor = -20;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Piercing Slam");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_additionalRandomDamage = _loc4_[4];
         _loc1_.m_armor = -30;
         _loc2_ = new Array(20,35,50,75,120);
         _loc3_ = new Array(50,75,100,125,200);
         _loc4_ = new Array(0,0,0,0,0);
         _loc1_ = this.CreateMove("Meteor Strike",_loc2_[0],MinionMoveClasses.meteor_strike,MinionMoveID.meteor_strike_t1,"moveIcon_meteorStrike",MinionType.TYPE_DINO,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_chargeTime = 3;
         _loc1_.m_additionalRandomDamage = _loc4_[0];
         _loc1_.m_armor = -5;
         _loc1_.m_enemiesItHits = 5;
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_additionalRandomDamage = _loc4_[1];
         _loc1_.m_armor = -10;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_additionalRandomDamage = _loc4_[2];
         _loc1_.m_armor = -15;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_additionalRandomDamage = _loc4_[3];
         _loc1_.m_armor = -20;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Cosmic Blast");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_additionalRandomDamage = _loc4_[4];
         _loc1_.m_armor = -30;
         _loc2_ = new Array(5,10,20,25,35);
         _loc3_ = new Array(30,40,50,60,85);
         _loc4_ = new Array(10,15,25,35,45);
         _loc1_ = this.CreateMove("Wild Tackle",_loc2_[0],MinionMoveClasses.wild_tackle,MinionMoveID.wild_tackle_t1,"moveIcon_wildTackle",MinionType.TYPE_DINO,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_exhaustTime = 1;
         _loc1_.m_additionalRandomDamage = _loc4_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_additionalRandomDamage = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_additionalRandomDamage = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_additionalRandomDamage = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Wild Slam");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_additionalRandomDamage = _loc4_[4];
         _loc2_ = new Array(5,10,20,25,35);
         _loc3_ = new Array(35,45,60,75,110);
         _loc4_ = new Array(0,0,0,0,0);
         _loc1_ = this.CreateMove("Ancient Force",_loc2_[0],MinionMoveClasses.ancient_force,MinionMoveID.ancient_force_t1,"moveIcon_ancientForce",MinionType.TYPE_DINO,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_exhaustTime = 1;
         _loc1_.m_additionalRandomDamage = _loc4_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_additionalRandomDamage = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_additionalRandomDamage = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_additionalRandomDamage = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Ancient Blast");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_additionalRandomDamage = _loc4_[4];
         _loc2_ = new Array(1,1,1,1,1);
         _loc3_ = new Array(50,75,100,150,300);
         _loc4_ = new Array(0,0,50,100,200);
         _loc1_ = this.CreateMove("Inner Force",_loc2_[0],MinionMoveClasses.inner_force,MinionMoveID.inner_force_t1,"moveIcon_innerForce",MinionType.TYPE_DINO,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_exhaustTime = 1;
         _loc1_.m_additionalRandomDamage = _loc4_[0];
         _loc1_.AddStatToDeBuffFirstTime(StatType.STAT_ATTACK,false,true,1);
         _loc1_.AddStatToDeBuff(StatType.STAT_SPEED);
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_additionalRandomDamage = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_additionalRandomDamage = _loc4_[2];
         _loc1_.m_stagesOfStatTypeToDeBuff = 2;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_additionalRandomDamage = _loc4_[3];
         _loc1_.m_stagesOfStatTypeToDeBuff = 3;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Extinction");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_exhaustTime = 2;
         _loc1_.m_chargeTime = 1;
         _loc1_.m_additionalRandomDamage = _loc4_[4];
         _loc1_.m_stagesOfStatTypeToDeBuff = 3;
         _loc2_ = new Array(5,10,20,25,35);
         _loc3_ = new Array(35,45,55,65,90);
         _loc4_ = new Array(10,15,25,35,45);
         _loc1_ = this.CreateMove("Reckless Grasp",_loc2_[0],MinionMoveClasses.reckless_grasp,MinionMoveID.reckless_grasp_t1,"moveIcon_recklessGrasp",MinionType.TYPE_DINO,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_additionalRandomDamage = _loc4_[0];
         _loc1_.m_selfDamage = 10;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_additionalRandomDamage = _loc4_[1];
         _loc1_.m_selfDamage = 15;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_additionalRandomDamage = _loc4_[2];
         _loc1_.m_selfDamage = 20;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_additionalRandomDamage = _loc4_[3];
         _loc1_.m_selfDamage = 25;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Heedless Grip");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_additionalRandomDamage = _loc4_[4];
         _loc1_.m_selfDamage = 30;
      }
      
      private function CreateGrassMoves() : void
      {
         var _loc1_:BaseMinionMove = null;
         var _loc2_:Array = null;
         var _loc3_:Array = null;
         var _loc4_:Array = null;
         _loc2_ = new Array(3,7,15,20,30);
         _loc3_ = new Array(25,35,45,55,75);
         _loc1_ = this.CreateMove("Razor Vine",_loc2_[0],MinionMoveClasses.razor_vine,MinionMoveID.razor_vine_t1,"moveIcon_razorVine",MinionType.TYPE_PLANT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Blade Vine");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_selfHeal = 10;
         _loc2_ = new Array(6,13,18,30,50);
         _loc3_ = new Array(15,20,25,30,45);
         _loc1_ = this.CreateMove("Drain",_loc2_[0],MinionMoveClasses.drain,MinionMoveID.drain_t1,"moveIcon_drain",MinionType.TYPE_PLANT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_selfHeal = 15;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_selfHeal = 20;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_selfHeal = 25;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_selfHeal = 30;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Heavy Drain");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_selfHeal = 45;
         _loc2_ = new Array(5,10,18,28,35);
         _loc3_ = new Array(35,45,55,60,100);
         _loc1_ = this.CreateMove("Grassblade",_loc2_[0],MinionMoveClasses.grassblade,MinionMoveID.grassblade_t1,"moveIcon_grassBlade",MinionType.TYPE_PLANT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_moveCoolDownTime = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Grass Katana");
         _loc1_.m_damage = _loc3_[4];
         _loc2_ = new Array(5,10,18,28,35);
         _loc3_ = new Array(30,40,50,55,90);
         _loc1_ = this.CreateMove("Tree Slam",_loc2_[0],MinionMoveClasses.tree_slam,MinionMoveID.tree_slam_t1,"moveIcon_treeSlam",MinionType.TYPE_PLANT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_moveCoolDownTime = 2;
         _loc1_.AddStatToBuffFirstTime(StatType.STAT_ATTACK,false,true,1,50);
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_chanceToBuff = 60;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_chanceToBuff = 75;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_chanceToBuff = 100;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Tree Bash");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_moveCoolDownTime = 3;
         _loc1_.m_stagesOfStatTypeToBuff = 2;
         _loc2_ = new Array(1,1,1,1,1);
         _loc3_ = new Array(25,35,45,55,75);
         _loc1_ = this.CreateMove("Timber",_loc2_[0],MinionMoveClasses.timber,MinionMoveID.timber_t1,"moveIcon_timber",MinionType.TYPE_PLANT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_moveCoolDownTime = 3;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Hard Wood");
         _loc1_.m_damage = _loc3_[4];
         _loc2_ = new Array(8,15,25,30,45);
         _loc3_ = new Array(40,55,65,80,120);
         _loc1_ = this.CreateMove("Spore Blast",_loc2_[0],MinionMoveClasses.spore_blast,MinionMoveID.spore_blast_t1,"moveIcon_sporeBlast",MinionType.TYPE_PLANT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_DOTDamage = 35;
         _loc1_.m_moveCoolDownTime = 5;
         _loc1_.m_exhaustTime = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_DOTDamage = 45;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_DOTDamage = 55;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_DOTDamage = 65;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Spore Storm");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_DOTDamage = 75;
         _loc2_ = new Array(10,15,20,25,30);
         _loc3_ = new Array(5,10,15,20,25);
         _loc4_ = new Array(15,20,25,30,35);
         _loc1_ = this.CreateMove("Nourish",_loc2_[0],MinionMoveClasses.nourish,MinionMoveID.nourish_t1,"moveIcon_nourish",MinionType.TYPE_PLANT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_healing = _loc3_[0];
         _loc1_.m_HOTHealing = _loc4_[0];
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_healing = _loc3_[1];
         _loc1_.m_HOTHealing = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_healing = _loc3_[2];
         _loc1_.m_HOTHealing = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_healing = _loc3_[3];
         _loc1_.m_HOTHealing = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Nurture");
         _loc1_.m_healing = _loc3_[4];
         _loc1_.m_HOTHealing = _loc4_[4];
         _loc2_ = new Array(10,15,20,25,30);
         _loc3_ = new Array(0,0,0,0,0);
         _loc4_ = new Array(25,30,35,45,55);
         _loc1_ = this.CreateMove("Regrowth",_loc2_[0],MinionMoveClasses.regrowth,MinionMoveID.regrowth_t1,"moveIcon_regrowth",MinionType.TYPE_PLANT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_healing = _loc3_[0];
         _loc1_.m_HOTHealing = _loc4_[0];
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_healing = _loc3_[1];
         _loc1_.m_HOTHealing = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_healing = _loc3_[2];
         _loc1_.m_HOTHealing = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_healing = _loc3_[3];
         _loc1_.m_HOTHealing = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Deep Growth");
         _loc1_.m_healing = _loc3_[4];
         _loc1_.m_HOTHealing = _loc4_[4];
         _loc2_ = new Array(8,12,18,22,28);
         _loc3_ = new Array(0,0,0,0,0);
         _loc4_ = new Array(50,60,70,80,100);
         _loc1_ = this.CreateMove("Resurgence",_loc2_[0],MinionMoveClasses.resurgence,MinionMoveID.resurgence_t1,"moveIcon_resurgence",MinionType.TYPE_PLANT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_healing = _loc3_[0];
         _loc1_.m_HOTHealing = _loc4_[0];
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_.m_moveCoolDownTime = 7;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_healing = _loc3_[1];
         _loc1_.m_HOTHealing = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_healing = _loc3_[2];
         _loc1_.m_HOTHealing = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_healing = _loc3_[3];
         _loc1_.m_HOTHealing = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Renewal");
         _loc1_.m_healing = _loc3_[4];
         _loc1_.m_HOTHealing = _loc4_[4];
         _loc2_ = new Array(15,20,28,35,50);
         _loc3_ = new Array(25,35,45,55,70);
         _loc4_ = new Array(30,40,50,60,70);
         _loc1_ = this.CreateMove("Swift Mend",_loc2_[0],MinionMoveClasses.swift_mend,MinionMoveID.swift_mend_t1,"moveIcon_swiftMend",MinionType.TYPE_PLANT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_healing = _loc3_[0];
         _loc1_.m_HOTHealing = _loc4_[0];
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_.m_moveCoolDownTime = 3;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_healing = _loc3_[1];
         _loc1_.m_HOTHealing = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_healing = _loc3_[2];
         _loc1_.m_HOTHealing = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_healing = _loc3_[3];
         _loc1_.m_HOTHealing = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Rapid Remedy");
         _loc1_.m_healing = _loc3_[4];
         _loc1_.m_HOTHealing = _loc4_[4];
         _loc2_ = new Array(1,1,1,1,1);
         _loc3_ = new Array(0,0,0,0,0);
         _loc4_ = new Array(50,60,70,80,100);
         _loc1_ = this.CreateMove("Serenity",_loc2_[0],MinionMoveClasses.serenity,MinionMoveID.serenity_t1,"moveIcon_serenity",MinionType.TYPE_PLANT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_healing = _loc3_[0];
         _loc1_.m_HOTHealing = _loc4_[0];
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 5;
         _loc1_.m_moveCoolDownTime = 50;
         _loc1_.m_exhaustTime = 1;
         _loc1_.m_overTimeTurnsActive = 2;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_healing = _loc3_[1];
         _loc1_.m_HOTHealing = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_healing = _loc3_[2];
         _loc1_.m_HOTHealing = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_healing = _loc3_[3];
         _loc1_.m_HOTHealing = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Rapid Remedy");
         _loc1_.m_healing = _loc3_[4];
         _loc1_.m_HOTHealing = _loc4_[4];
         _loc2_ = new Array(3,7,15,20,40);
         _loc1_ = this.CreateMove("Poison Ivy",_loc2_[0],MinionMoveClasses.poison_ivy,MinionMoveID.poison_ivy_t1,"moveIcon_poisonIvy",MinionType.TYPE_PLANT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_DOTDamage = 15;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_DOTDamage = 20;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_DOTDamage = 25;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_DOTDamage = 30;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Arkam Asylum");
         _loc1_.m_damage = 20;
         _loc1_.m_DOTDamage = 50;
      }
      
      private function CreateWaterMoves() : void
      {
         var _loc1_:BaseMinionMove = null;
         var _loc2_:Array = null;
         var _loc3_:Array = null;
         var _loc4_:Array = null;
         _loc2_ = new Array(10,18,25,30,45);
         _loc3_ = new Array(35,45,55,65,100);
         _loc1_ = this.CreateMove("Soak",_loc2_[0],MinionMoveClasses.soak,MinionMoveID.soak_t1,"moveIcon_soak",MinionType.TYPE_WATER,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Drench");
         _loc1_.m_damage = _loc3_[4];
         _loc2_ = new Array(12,20,28,35,50);
         _loc3_ = new Array(35,45,55,65,100);
         _loc4_ = new Array(5,10,15,20,25);
         _loc1_ = this.CreateMove("Water Slam",_loc2_[0],MinionMoveClasses.water_slam,MinionMoveID.water_slam_t1,"moveIcon_waterSlam",MinionType.TYPE_WATER,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.AddStatToBuffFirstTime(StatType.STAT_ENERGY,false,true,1,5);
         _loc1_.m_energyPercentageRestored = 5;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_chanceToBuff = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_chanceToBuff = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_chanceToBuff = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Water Bash");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_chanceToBuff = _loc4_[4];
         _loc2_ = new Array(12,20,28,35,50);
         _loc3_ = new Array(25,35,45,55,70);
         _loc4_ = new Array(10,20,30,40,50);
         _loc1_ = this.CreateMove("Fresh Stream",_loc2_[0],MinionMoveClasses.fresh_stream,MinionMoveID.fresh_stream_t1,"moveIcon_freshStream",MinionType.TYPE_WATER,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.AddStatToBuffFirstTime(StatType.STAT_ENERGY,false,true,1,10);
         _loc1_.m_energyPercentageRestored = 20;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_chanceToBuff = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_chanceToBuff = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_chanceToBuff = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Fresh River");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_chanceToBuff = _loc4_[4];
         _loc1_.m_energyPercentageRestored = 35;
         _loc2_ = new Array(20,40,60,75,125);
         _loc3_ = new Array(40,60,75,100,150);
         _loc4_ = new Array(1,1,2,2,3);
         _loc1_ = this.CreateMove("Water Jet",_loc2_[0],MinionMoveClasses.waterjet,MinionMoveID.waterjet_t1,"moveIcon_waterJet",MinionType.TYPE_WATER,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.AddStatToBuffFirstTime(StatType.STAT_SPEED,false,true,1);
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_stagesOfStatTypeToBuff = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_stagesOfStatTypeToBuff = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_stagesOfStatTypeToBuff = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Aqua Jet");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_stagesOfStatTypeToBuff = _loc4_[4];
         _loc2_ = new Array(6,12,20,28,40);
         _loc3_ = new Array(10,15,20,25,35);
         _loc1_ = this.CreateMove("Rainfall",_loc2_[0],MinionMoveClasses.rainfall,MinionMoveID.rainfall_t1,"moveIcon_rainfall",MinionType.TYPE_WATER,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_healing = _loc3_[0];
         _loc1_.m_alliesItHits = 5;
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_healing = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_healing = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_healing = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Cleansing Rain");
         _loc1_.m_healing = _loc3_[4];
         _loc2_ = new Array(25,40,75,100,125);
         _loc3_ = new Array(30,40,50,60,80);
         _loc1_ = this.CreateMove("Refreshing Wave",_loc2_[0],MinionMoveClasses.refreshing_wave,MinionMoveID.refreshing_wave_t1,"moveIcon_refreshingWave",MinionType.TYPE_WATER,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_healing = _loc3_[0];
         _loc1_.m_alliesItHits = 5;
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_healing = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_healing = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_healing = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Deep Soak");
         _loc1_.m_healing = _loc3_[4];
         _loc2_ = new Array(50,80,150,200,250);
         _loc3_ = new Array(60,80,100,120,160);
         _loc1_ = this.CreateMove("Water Infusion",_loc2_[0],MinionMoveClasses.water_infusion,MinionMoveID.water_infusion_t1,"moveIcon_waterInfusion",MinionType.TYPE_WATER,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_healing = _loc3_[0];
         _loc1_.m_alliesItHits = 5;
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_healing = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_healing = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_healing = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Pure Infusion");
         _loc1_.m_healing = _loc3_[4];
         _loc2_ = new Array(12,24,40,55,80);
         _loc3_ = new Array(30,40,50,60,80);
         _loc1_ = this.CreateMove("Overflow",_loc2_[0],MinionMoveClasses.overflow,MinionMoveID.overflow_t1,"moveIcon_overflow",MinionType.TYPE_WATER,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_healing = _loc3_[0];
         _loc1_.m_alliesItHits = 3;
         _loc1_.m_hitsRandomTargets = true;
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_healing = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_healing = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_healing = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Cascade");
         _loc1_.m_healing = _loc3_[4];
         _loc2_ = new Array(12,20,35,50,80);
         _loc3_ = new Array(15,20,25,30,35);
         _loc1_ = this.CreateMove("Watergize",_loc2_[0],MinionMoveClasses.watergize,MinionMoveID.watergize_t1,"moveIcon_energize",MinionType.TYPE_WATER,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_healing = _loc3_[0];
         _loc1_.m_alliesItHits = 3;
         _loc1_.m_hitsRandomTargets = true;
         _loc1_.m_enemiesItHits = 0;
         _loc1_.AddStatToBuffFirstTime(StatType.STAT_ENERGY,true,false,1,10);
         _loc1_.m_energyPercentageRestored = 10;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_healing = _loc3_[1];
         _loc1_.m_chanceToBuff = 15;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_healing = _loc3_[2];
         _loc1_.m_chanceToBuff = 20;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_healing = _loc3_[3];
         _loc1_.m_chanceToBuff = 30;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Empowering Water");
         _loc1_.m_healing = _loc3_[4];
         _loc1_.m_chanceToBuff = 50;
      }
      
      private function CreateIceMoves() : void
      {
         var _loc1_:BaseMinionMove = null;
         var _loc2_:Array = null;
         var _loc3_:Array = null;
         var _loc4_:Array = null;
         var _loc5_:Array = null;
         _loc2_ = new Array(3,7,15,20,30);
         _loc3_ = new Array(25,35,45,55,75);
         _loc4_ = new Array(0,0,0,0,0);
         _loc5_ = new Array(0,0,0,0,0);
         _loc1_ = this.CreateMove("Hailstone",_loc2_[0],MinionMoveClasses.hailstone,MinionMoveID.hailstone_t1,"moveIcon_hailstone",MinionType.TYPE_ICE,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_armor = _loc4_[0];
         _loc1_.m_freezeChance = _loc5_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_armor = _loc4_[1];
         _loc1_.m_freezeChance = _loc5_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_armor = _loc4_[2];
         _loc1_.m_freezeChance = _loc5_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_armor = _loc4_[3];
         _loc1_.m_freezeChance = _loc5_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Icicle");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_armor = _loc4_[4];
         _loc1_.m_freezeChance = _loc5_[4];
         _loc2_ = new Array(5,10,19,27,35);
         _loc3_ = new Array(30,40,50,60,85);
         _loc4_ = new Array(0,0,0,0,0);
         _loc5_ = new Array(5,6,7,8,10);
         _loc1_ = this.CreateMove("Icy Blast",_loc2_[0],MinionMoveClasses.icy_blast,MinionMoveID.icy_blast_t1,"moveIcon_icyBlast",MinionType.TYPE_ICE,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_armor = _loc4_[0];
         _loc1_.m_freezeChance = _loc5_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_armor = _loc4_[1];
         _loc1_.m_freezeChance = _loc5_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_armor = _loc4_[2];
         _loc1_.m_freezeChance = _loc5_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_armor = _loc4_[3];
         _loc1_.m_freezeChance = _loc5_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Arctic Blast");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_armor = _loc4_[4];
         _loc1_.m_freezeChance = _loc5_[4];
         _loc2_ = new Array(5,10,19,27,35);
         _loc3_ = new Array(5,10,15,20,25);
         _loc4_ = new Array(0,0,0,0,0);
         _loc5_ = new Array(10,20,30,40,50);
         _loc1_ = this.CreateMove("Sleet",_loc2_[0],MinionMoveClasses.sleet,MinionMoveID.sleet_t1,"moveIcon_sleet",MinionType.TYPE_ICE,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_armor = _loc4_[0];
         _loc1_.m_freezeChance = _loc5_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_armor = _loc4_[1];
         _loc1_.m_freezeChance = _loc5_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_armor = _loc4_[2];
         _loc1_.m_freezeChance = _loc5_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_armor = _loc4_[3];
         _loc1_.m_freezeChance = _loc5_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Permafrost");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_armor = _loc4_[4];
         _loc1_.m_freezeChance = _loc5_[4];
         _loc2_ = new Array(4,7,15,20,30);
         _loc3_ = new Array(25,30,35,40,55);
         _loc4_ = new Array(-5,-6,-7,-8,-10);
         _loc5_ = new Array(0,0,0,0,0);
         _loc1_ = this.CreateMove("Dry Ice",_loc2_[0],MinionMoveClasses.dry_ice,MinionMoveID.dry_ice_t1,"moveIcon_dryIce",MinionType.TYPE_ICE,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_armor = _loc4_[0];
         _loc1_.m_freezeChance = _loc5_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_armor = _loc4_[1];
         _loc1_.m_freezeChance = _loc5_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_armor = _loc4_[2];
         _loc1_.m_freezeChance = _loc5_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_armor = _loc4_[3];
         _loc1_.m_freezeChance = _loc5_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Ice Shard");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_armor = _loc4_[4];
         _loc1_.m_freezeChance = _loc5_[4];
         _loc2_ = new Array(30,40,50,60,75);
         _loc3_ = new Array(0,0,0,0,0);
         _loc4_ = new Array(-50 * this.m_armorModRate,-60 * this.m_armorModRate,-70 * this.m_armorModRate,-80 * this.m_armorModRate,-90 * this.m_armorModRate);
         _loc5_ = new Array(0,0,0,0,0);
         _loc1_ = this.CreateMove("Bone Chill",_loc2_[0],MinionMoveClasses.bone_chill,MinionMoveID.bone_chill_t1,"moveIcon_boneChill",MinionType.TYPE_ICE,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_armor = _loc4_[0];
         _loc1_.m_freezeChance = _loc5_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_armor = _loc4_[1];
         _loc1_.m_freezeChance = _loc5_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_armor = _loc4_[2];
         _loc1_.m_freezeChance = _loc5_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_armor = _loc4_[3];
         _loc1_.m_freezeChance = _loc5_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Bone Freeze");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_armor = _loc4_[4];
         _loc1_.m_freezeChance = _loc5_[4];
         _loc2_ = new Array(15,25,45,60,75);
         _loc3_ = new Array(0,0,0,0,0);
         _loc4_ = new Array(-10 * this.m_armorModRate,-20 * this.m_armorModRate,-30 * this.m_armorModRate,-40 * this.m_armorModRate,-50 * this.m_armorModRate);
         _loc5_ = new Array(0,0,0,0,0);
         _loc1_ = this.CreateMove("Coldfront",_loc2_[0],MinionMoveClasses.coldfront,MinionMoveID.coldfront_t1,"moveIcon_coldfront",MinionType.TYPE_ICE,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_armor = _loc4_[0];
         _loc1_.m_freezeChance = _loc5_[0];
         _loc1_.m_enemiesItHits = 5;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_armor = _loc4_[1];
         _loc1_.m_freezeChance = _loc5_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_armor = _loc4_[2];
         _loc1_.m_freezeChance = _loc5_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_armor = _loc4_[3];
         _loc1_.m_freezeChance = _loc5_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Ice Storm");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_armor = _loc4_[4];
         _loc1_.m_freezeChance = _loc5_[4];
         _loc2_ = new Array(10,18,25,30,35);
         _loc3_ = new Array(30,35,40,45,50);
         _loc1_ = this.CreateMove("Ice Shield",_loc2_[0],MinionMoveClasses.ice_shield,MinionMoveID.ice_shield_t1,"moveIcon_iceShield",MinionType.TYPE_ICE,MinionVisualMoveID.VM_ice_shield);
         _loc1_.m_setShieldAmount = _loc3_[0];
         _loc1_.m_alliesItHits = 1;
         _loc1_.m_enemiesItHits = 0;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_setShieldAmount = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_setShieldAmount = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_setShieldAmount = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Ice Defense");
         _loc1_.m_setShieldAmount = _loc3_[4];
         _loc2_ = new Array(10,18,25,30,50);
         _loc3_ = new Array(45,55,65,75,90);
         _loc1_ = this.CreateMove("Ice Enclosure",_loc2_[0],MinionMoveClasses.ice_enclosure,MinionMoveID.ice_enclosure_t1,"moveIcon_iceEnclosure",MinionType.TYPE_ICE,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_setShieldAmount = _loc3_[0];
         _loc1_.m_moveCoolDownTime = 1;
         _loc1_.m_alliesItHits = 1;
         _loc1_.m_enemiesItHits = 0;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_setShieldAmount = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_setShieldAmount = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_setShieldAmount = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Ice Armor");
         _loc1_.m_setShieldAmount = _loc3_[4];
         _loc2_ = new Array(10,18,25,30,50);
         _loc3_ = new Array(35,45,55,65,80);
         _loc1_ = this.CreateMove("Ice Barrier",_loc2_[0],MinionMoveClasses.ice_barrier,MinionMoveID.ice_barrier_t1,"moveIcon_iceBarrier",MinionType.TYPE_ICE,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_setShieldAmount = _loc3_[0];
         _loc1_.m_alliesItHits = 3;
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_moveCoolDownTime = 2;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_setShieldAmount = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_setShieldAmount = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_setShieldAmount = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Ice Fortress");
         _loc1_.m_setShieldAmount = _loc3_[4];
         _loc2_ = new Array(12,20,28,34,42);
         _loc3_ = new Array(20,25,30,35,40);
         _loc1_ = this.CreateMove("Mystic Ice",_loc2_[0],MinionMoveClasses.mystic_ice,MinionMoveID.mystic_ice_t1,"moveIcon_mysticIce",MinionType.TYPE_ICE,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_setShieldAmount = _loc3_[0];
         _loc1_.AddStatToBuffFirstTime(StatType.STAT_HEALING,true,false,1,50);
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_setShieldAmount = _loc3_[1];
         _loc1_.m_chanceToBuff = 60;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_setShieldAmount = _loc3_[2];
         _loc1_.m_chanceToBuff = 70;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_setShieldAmount = _loc3_[3];
         _loc1_.m_chanceToBuff = 80;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Chosen Ice");
         _loc1_.m_setShieldAmount = _loc3_[4];
         _loc1_.m_chanceToBuff = 100;
      }
      
      private function CreateDemonMoves() : void
      {
         var _loc1_:BaseMinionMove = null;
         var _loc2_:Array = null;
         var _loc3_:Array = null;
         var _loc4_:Array = null;
         _loc2_ = new Array(3,10,20,30,50);
         _loc3_ = new Array(2,3,4,5,10);
         _loc4_ = new Array(-1,-2,-3,-4,-6);
         _loc1_ = this.CreateMove("Evil Eye",_loc2_[0],MinionMoveClasses.evil_eye,MinionMoveID.evil_eye_t1,"moveIcon_evilEye",MinionType.TYPE_DEMONIC,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.AddStatToDeBuffFirstTime(StatType.STAT_ATTACK,true,false);
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Demonic Stare");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc4_[4];
         _loc2_ = new Array(10,18,25,30,55);
         _loc3_ = new Array(1,1,1,1,1);
         _loc4_ = new Array(70,90,110,130,150);
         _loc1_ = this.CreateMove("Demonic Bargain",_loc2_[0],MinionMoveClasses.demonic_bargain,MinionMoveID.demonic_bargain_t1,"moveIcon_demonicBargain",MinionType.TYPE_DEMONIC,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_healing = _loc3_[0];
         _loc1_.m_additionalRandomHealing = _loc4_[0];
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_healing = _loc3_[1];
         _loc1_.m_additionalRandomHealing = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_healing = _loc3_[2];
         _loc1_.m_additionalRandomHealing = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_healing = _loc3_[3];
         _loc1_.m_additionalRandomHealing = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Demonic Insight");
         _loc1_.m_healing = _loc3_[4];
         _loc1_.m_additionalRandomHealing = _loc4_[4];
         _loc1_.AddStatToDeBuffFirstTime(StatType.STAT_ENERGY,true,false,1,20);
         _loc2_ = new Array(10,18,25,30,55);
         _loc3_ = new Array(1,1,1,1,1);
         _loc4_ = new Array(110,140,180,220,300);
         _loc1_ = this.CreateMove("Forceful Heal",_loc2_[0],MinionMoveClasses.forceful_heal,MinionMoveID.forceful_heal_t1,"moveIcon_forcefulHeal",MinionType.TYPE_DEMONIC,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_healing = _loc3_[0];
         _loc1_.m_additionalRandomHealing = _loc4_[0];
         _loc1_.m_exhaustTime = 1;
         _loc1_.AddStatToBuffFirstTime(StatType.STAT_ATTACK,true,false,1,5);
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_healing = _loc3_[1];
         _loc1_.m_additionalRandomHealing = _loc4_[1];
         _loc1_.m_chanceToBuff = 10;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_healing = _loc3_[2];
         _loc1_.m_additionalRandomHealing = _loc4_[2];
         _loc1_.m_chanceToBuff = 20;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_healing = _loc3_[3];
         _loc1_.m_additionalRandomHealing = _loc4_[3];
         _loc1_.m_chanceToBuff = 15;
         _loc1_.m_stagesOfStatTypeToBuff = 2;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Forced Repair");
         _loc1_.m_healing = _loc3_[4];
         _loc1_.m_additionalRandomHealing = _loc4_[4];
         _loc1_.m_chanceToBuff = 20;
         _loc2_ = new Array(2,5,10,15,20);
         _loc3_ = new Array(1,1,1,1,1);
         _loc4_ = new Array(110,140,180,220,300);
         _loc1_ = this.CreateMove("Demonic Sacrifice",_loc2_[0],MinionMoveClasses.demonic_sacrifice,MinionMoveID.demonic_sacrifice_t1,"moveIcon_demonicSacrifice",MinionType.TYPE_DEMONIC,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_healing = _loc3_[0];
         _loc1_.m_additionalRandomHealing = _loc4_[0];
         _loc1_.m_exhaustTime = 3;
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 5;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_healing = _loc3_[1];
         _loc1_.m_additionalRandomHealing = _loc4_[1];
         _loc1_.m_chanceToBuff = 10;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_healing = _loc3_[2];
         _loc1_.m_additionalRandomHealing = _loc4_[2];
         _loc1_.m_chanceToBuff = 20;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_healing = _loc3_[3];
         _loc1_.m_additionalRandomHealing = _loc4_[3];
         _loc1_.m_chanceToBuff = 15;
         _loc1_.m_stagesOfStatTypeToBuff = 2;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Forced Repair");
         _loc1_.m_healing = _loc3_[4];
         _loc1_.m_additionalRandomHealing = _loc4_[4];
         _loc1_.m_chanceToBuff = 20;
         _loc2_ = new Array(10,15,20,25,30);
         _loc3_ = new Array(1,1,1,1,1);
         _loc4_ = new Array(110,140,180,220,300);
         _loc1_ = this.CreateMove("Madness",_loc2_[0],MinionMoveClasses.madness,MinionMoveID.madness_t1,"moveIcon_madness",MinionType.TYPE_DEMONIC,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_healing = _loc3_[0];
         _loc1_.m_additionalRandomHealing = _loc4_[0];
         _loc1_.m_selfDamage = 8;
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_healing = _loc3_[1];
         _loc1_.m_additionalRandomHealing = _loc4_[1];
         _loc1_.m_selfDamage = 10;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_healing = _loc3_[2];
         _loc1_.m_additionalRandomHealing = _loc4_[2];
         _loc1_.m_selfDamage = 12;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_healing = _loc3_[3];
         _loc1_.m_additionalRandomHealing = _loc4_[3];
         _loc1_.m_selfDamage = 17;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Infernal Madness");
         _loc1_.m_healing = _loc3_[4];
         _loc1_.m_additionalRandomHealing = _loc4_[4];
         _loc1_.m_selfDamage = 28;
         _loc2_ = new Array(5,10,20,25,35);
         _loc3_ = new Array(20,30,35,45,50);
         _loc4_ = new Array(10,15,20,25,50);
         _loc1_ = this.CreateMove("Demonic Strike",_loc2_[0],MinionMoveClasses.demonic_strike,MinionMoveID.demonic_strike_t1,"moveIcon_demonicStrike",MinionType.TYPE_DEMONIC,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_additionalRandomDamage = _loc4_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_additionalRandomDamage = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_additionalRandomDamage = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_additionalRandomDamage = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Demonic Slam");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_additionalRandomDamage = _loc4_[4];
         _loc2_ = new Array(5,10,20,25,35);
         _loc3_ = new Array(35,45,55,65,90);
         _loc4_ = new Array(15,20,30,40,50);
         _loc1_ = this.CreateMove("Blood Press",_loc2_[0],MinionMoveClasses.blood_press,MinionMoveID.blood_press_t1,"moveIcon_bloodPress",MinionType.TYPE_DEMONIC,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_additionalRandomDamage = _loc4_[0];
         _loc1_.m_exhaustTime = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_additionalRandomDamage = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_additionalRandomDamage = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_additionalRandomDamage = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Blood Force");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_additionalRandomDamage = _loc4_[4];
         _loc2_ = new Array(5,10,20,25,35);
         _loc3_ = new Array(50,75,100,125,170);
         _loc4_ = new Array(10,15,20,25,50);
         _loc1_ = this.CreateMove("Demonic Force",_loc2_[0],MinionMoveClasses.demonic_force,MinionMoveID.demonic_force_t1,"moveIcon_demonicForce",MinionType.TYPE_DEMONIC,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_additionalRandomDamage = _loc4_[0];
         _loc1_.m_exhaustTime = 2;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_additionalRandomDamage = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_additionalRandomDamage = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_additionalRandomDamage = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Demonic Destruction");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_additionalRandomDamage = _loc4_[4];
         _loc2_ = new Array(2,5,10,15,20);
         _loc3_ = new Array(5,10,15,20,30);
         _loc4_ = new Array(100,175,250,350,375);
         _loc1_ = this.CreateMove("Crazed Blast",_loc2_[0],MinionMoveClasses.crazed_blast,MinionMoveID.crazed_blast_t1,"moveIcon_crazedBlast",MinionType.TYPE_DEMONIC,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_additionalRandomDamage = _loc4_[0];
         _loc1_.m_exhaustTime = 2;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_additionalRandomDamage = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_additionalRandomDamage = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_additionalRandomDamage = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Forced Insanity");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_additionalRandomDamage = _loc4_[4];
         _loc1_.AddStatToBuffFirstTime(StatType.STAT_ATTACK,false,true,2);
         _loc2_ = new Array(5,10,20,25,35);
         _loc3_ = new Array(60,85,110,135,180);
         _loc1_ = this.CreateMove("Blood Ritual",_loc2_[0],MinionMoveClasses.blood_ritual,MinionMoveID.blood_ritual_t1,"moveIcon_bloodFusion",MinionType.TYPE_DEMONIC,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_DOTDamage = _loc3_[0];
         _loc1_.m_exhaustTime = 3;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_DOTDamage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_DOTDamage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_DOTDamage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Blood Swap");
         _loc1_.m_DOTDamage = _loc3_[4];
      }
      
      private function CreateFlyingMoves() : void
      {
         var _loc1_:BaseMinionMove = null;
         var _loc2_:Array = null;
         var _loc3_:Array = null;
         _loc2_ = new Array(10,18,25,30,45);
         _loc3_ = new Array(35,45,55,65,100);
         _loc1_ = this.CreateMove("Peck",_loc2_[0],MinionMoveClasses.peck,MinionMoveID.peck_t1,"moveIcon_peck",MinionType.TYPE_FLYING,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Drill Beak");
         _loc1_.m_damage = _loc3_[4];
         _loc2_ = new Array(12,20,28,33,45);
         _loc3_ = new Array(40,50,60,70,100);
         _loc1_ = this.CreateMove("Wind Lance",_loc2_[0],MinionMoveClasses.wind_lance,MinionMoveID.wind_lance_t1,"moveIcon_windLance",MinionType.TYPE_FLYING,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Wind Puncture");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_armor = -10;
         _loc2_ = new Array(10,18,25,30,45);
         _loc3_ = new Array(35,45,55,65,100);
         _loc1_ = this.CreateMove("Flurry",_loc2_[0],MinionMoveClasses.flurry,MinionMoveID.flurry_t1,"moveIcon_flurry",MinionType.TYPE_FLYING,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_hitsRandomTargets = true;
         _loc1_.m_enemiesItHits = 2;
         _loc1_.m_moveCoolDownTime = 2;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Windstorm");
         _loc1_.m_damage = _loc3_[4];
         _loc2_ = new Array(30,40,60,75,125);
         _loc3_ = new Array(50,75,100,125,200);
         _loc1_ = this.CreateMove("Hurricane",_loc2_[0],MinionMoveClasses.hurricane,MinionMoveID.hurricane_t1,"moveIcon_hurricane",MinionType.TYPE_FLYING,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Punishing Cyclone");
         _loc1_.m_damage = _loc3_[4];
         _loc2_ = new Array(10,18,25,30,45);
         _loc3_ = new Array(25,30,35,40,40);
         _loc1_ = this.CreateMove("Cutting Wind",_loc2_[0],MinionMoveClasses.cutting_wind,MinionMoveID.cutting_wind_t1,"moveIcon_cuttingWind",MinionType.TYPE_FLYING,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_clearBuffsAndDebuffsChance = 10;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_clearBuffsAndDebuffsChance = 12;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_clearBuffsAndDebuffsChance = 15;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_clearBuffsAndDebuffsChance = 20;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Slicing Blast");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_clearBuffsAndDebuffsChance = 50;
         _loc2_ = new Array(10,15,30,40,50);
         _loc3_ = new Array(1,2,3,2,5);
         _loc1_ = this.CreateMove("Blow By",_loc2_[0],MinionMoveClasses.blow_by,MinionMoveID.blow_by_t1,"moveIcon_blowBy",MinionType.TYPE_FLYING,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_enemiesItHits = _loc3_[0];
         _loc1_.m_clearBuffsAndDebuffsChance = 100;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_enemiesItHits = _loc3_[1];
         _loc1_.m_hitsRandomTargets = true;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_enemiesItHits = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_enemiesItHits = _loc3_[3];
         _loc1_.m_hitsRandomTargets = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Punishing Cyclone");
         _loc1_.m_enemiesItHits = _loc3_[4];
         _loc2_ = new Array(15,18,25,35,50);
         _loc3_ = new Array(20,25,30,35,45);
         _loc1_ = this.CreateMove("Volley",_loc2_[0],MinionMoveClasses.volley,MinionMoveID.volley_t1,"moveIcon_volley",MinionType.TYPE_FLYING,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_enemiesItHits = 5;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Punishing Volley");
         _loc1_.m_damage = _loc3_[4];
      }
      
      private function CreateHolyMoves() : void
      {
         var _loc1_:BaseMinionMove = null;
         var _loc2_:Array = null;
         var _loc3_:Array = null;
         var _loc4_:Array = null;
         _loc2_ = new Array(5,10,20,25,35);
         _loc3_ = new Array(25,35,45,55,70);
         _loc4_ = new Array(0,0,0,0,0);
         _loc1_ = this.CreateMove("Holy Strike",_loc2_[0],MinionMoveClasses.holy_strike,MinionMoveID.holy_strike_t1,"moveIcon_holyStrike",MinionType.TYPE_HOLY,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_healing = _loc4_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_healing = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_healing = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_healing = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Holy Slam");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_healing = _loc4_[4];
         _loc2_ = new Array(5,10,20,25,35);
         _loc3_ = new Array(35,45,55,65,100);
         _loc4_ = new Array(0,0,0,0,0);
         _loc1_ = this.CreateMove("penance",_loc2_[0],MinionMoveClasses.penance,MinionMoveID.penance_t1,"moveIcon_penance",MinionType.TYPE_HOLY,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_healing = _loc4_[0];
         _loc1_.m_moveCoolDownTime = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_healing = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_healing = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_healing = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"divine wrath");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_healing = _loc4_[4];
         _loc1_.m_moveCoolDownTime = 2;
         _loc2_ = new Array(10,18,25,30,45);
         _loc3_ = new Array(0,0,0,0,0);
         _loc4_ = new Array(35,45,55,65,75);
         _loc1_ = this.CreateMove("Hope",_loc2_[0],MinionMoveClasses.hope,MinionMoveID.hope_t1,"moveIcon_hope",MinionType.TYPE_HOLY,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_healing = _loc4_[0];
         _loc1_.m_alliesItHits = 1;
         _loc1_.m_enemiesItHits = 0;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_healing = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_healing = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_healing = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Focused Faith");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_healing = _loc4_[4];
         _loc1_.m_setShieldAmount = 15;
         _loc2_ = new Array(10,18,25,30,50);
         _loc3_ = new Array(0,0,0,0,0);
         _loc4_ = new Array(45,55,65,75,90);
         _loc1_ = this.CreateMove("Holy Light",_loc2_[0],MinionMoveClasses.holy_light,MinionMoveID.holy_light_t1,"moveIcon_holyLight",MinionType.TYPE_HOLY,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_healing = _loc4_[0];
         _loc1_.m_moveCoolDownTime = 1;
         _loc1_.m_alliesItHits = 1;
         _loc1_.m_enemiesItHits = 0;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_healing = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_healing = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_healing = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Divine Light");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_healing = _loc4_[4];
         _loc1_.m_HOTHealing = 10;
         _loc2_ = new Array(5,10,20,25,40);
         _loc3_ = new Array(25,35,45,55,75);
         _loc4_ = new Array(5,8,10,15,20);
         _loc1_ = this.CreateMove("Crusade",_loc2_[0],MinionMoveClasses.crusade,MinionMoveID.crusade_t1,"moveIcon_crusade",MinionType.TYPE_HOLY,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_selfHeal = _loc4_[0];
         _loc1_.m_moveCoolDownTime = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_selfHeal = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_selfHeal = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_selfHeal = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Divine Conquest");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_selfHeal = _loc4_[4];
         _loc2_ = new Array(15,23,30,45,60);
         _loc3_ = new Array(35,45,55,65,100);
         _loc4_ = new Array(45,55,65,75,90);
         _loc1_ = this.CreateMove("Righteous Fate",_loc2_[0],MinionMoveClasses.righteous_fate,MinionMoveID.righteous_fate_t1,"moveIcon_righteousFate",MinionType.TYPE_HOLY,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_selfHeal = _loc4_[0];
         _loc1_.m_moveCoolDownTime = 3;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_selfHeal = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_selfHeal = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_selfHeal = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Divine Destiny");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_selfHeal = _loc4_[4];
         _loc1_.m_moveCoolDownTime = 2;
         _loc2_ = new Array(5,10,20,25,35);
         _loc3_ = new Array(5,8,10,12,20);
         _loc4_ = new Array(10,15,20,25,35);
         _loc1_ = this.CreateMove("Holy Burn",_loc2_[0],MinionMoveClasses.holy_burn,MinionMoveID.holy_burn_t1,"moveIcon_holyBurn",MinionType.TYPE_HOLY,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_DOTDamage = _loc4_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_DOTDamage = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_DOTDamage = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_DOTDamage = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Judgement");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_DOTDamage = _loc4_[4];
         _loc2_ = new Array(2,5,10,15,20);
         _loc3_ = new Array(5,8,10,12,15);
         _loc4_ = new Array(25,50,75,100,100);
         _loc1_ = this.CreateMove("Brilliance",_loc2_[0],MinionMoveClasses.brilliance,MinionMoveID.brilliance_t1,"moveIcon_brilliance",MinionType.TYPE_HOLY,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.AddStatToBuffFirstTime(StatType.STAT_HEALING,false,true,1,_loc4_[0]);
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_chanceToBuff = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_chanceToBuff = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_chanceToBuff = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Deep Perception");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_chanceToBuff = _loc4_[4];
         _loc1_.m_stagesOfStatTypeToBuff = 2;
         _loc2_ = new Array(0,0,0,0,0);
         _loc3_ = new Array(10,15,25,35,100);
         _loc4_ = new Array(3,2,1,0,3);
         _loc1_ = this.CreateMove("Martyr",_loc2_[0],MinionMoveClasses.martyr,MinionMoveID.martyr_t1,"moveIcon_martyr",MinionType.TYPE_HOLY,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_selfDamage = _loc3_[0];
         _loc1_.m_onlyHitsSelf = true;
         _loc1_.m_moveCoolDownTime = _loc4_[0];
         _loc1_.AddStatToBuffFirstTime(StatType.STAT_HEALING,false,true,1);
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_selfDamage = _loc3_[1];
         _loc1_.m_moveCoolDownTime = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_selfDamage = _loc3_[2];
         _loc1_.m_moveCoolDownTime = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_selfDamage = _loc3_[3];
         _loc1_.m_moveCoolDownTime = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Chosen Martyr");
         _loc1_.m_selfDamage = _loc3_[4];
         _loc1_.m_moveCoolDownTime = _loc4_[4];
         _loc1_.m_stagesOfStatTypeToBuff = 3;
         _loc2_ = new Array(30,45,70,90,125);
         _loc3_ = new Array(1,2,3,4,6);
         _loc1_ = this.CreateMove("Righteous Zeal",_loc2_[0],MinionMoveClasses.righteous_zeal,MinionMoveID.righteous_zeal_t1,"moveIcon_righteousZeal",MinionType.TYPE_HOLY,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.AddStatToBuffFirstTime(StatType.STAT_HEALING,false,true,1);
         _loc1_.AddStatToBuff(StatType.STAT_ATTACK);
         _loc1_.AddStatToBuff(StatType.STAT_SPEED);
         _loc1_.m_alliesItHits = 1;
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_onlyHitsSelf = true;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_stagesOfStatTypeToBuff = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_stagesOfStatTypeToBuff = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_stagesOfStatTypeToBuff = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Divine Inspiration");
         _loc1_.m_stagesOfStatTypeToBuff = _loc3_[4];
         _loc2_ = new Array(10,18,25,30,45);
         _loc3_ = new Array(20,25,30,35,50);
         _loc4_ = new Array(20,25,30,35,40);
         _loc1_ = this.CreateMove("Cleansing Heal",_loc2_[0],MinionMoveClasses.cleansing_heal,MinionMoveID.cleansing_heal_t1,"moveIcon_cleansingHeal",MinionType.TYPE_HOLY,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_clearBuffsAndDebuffsChance = _loc3_[0];
         _loc1_.m_healing = _loc4_[0];
         _loc1_.m_alliesItHits = 1;
         _loc1_.m_enemiesItHits = 0;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_clearBuffsAndDebuffsChance = _loc3_[1];
         _loc1_.m_healing = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_clearBuffsAndDebuffsChance = _loc3_[2];
         _loc1_.m_healing = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_clearBuffsAndDebuffsChance = _loc3_[3];
         _loc1_.m_healing = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Washed Light");
         _loc1_.m_clearBuffsAndDebuffsChance = _loc3_[4];
         _loc1_.m_healing = _loc4_[4];
         _loc2_ = new Array(5,25,40,50,55);
         _loc3_ = new Array(1,2,3,4,5);
         _loc1_ = this.CreateMove("Cleanse Darkness",_loc2_[0],MinionMoveClasses.cleanse_darkness,MinionMoveID.cleanse_darkness_t1,"moveIcon_cleanseDarkness",MinionType.TYPE_HOLY,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_alliesItHits = _loc3_[0];
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_clearBuffsAndDebuffsChance = 100;
         _loc1_.m_hitsRandomTargets = true;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_alliesItHits = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_alliesItHits = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_alliesItHits = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Abolish Darkness");
         _loc1_.m_alliesItHits = _loc3_[4];
         _loc1_ = this.CreateMove("Purge",20,MinionMoveClasses.purge,MinionMoveID.purge_t1,"moveIcon_purge",MinionType.TYPE_HOLY,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_alliesItHits = 1;
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_clearBuffsAndDebuffsChance = 100;
      }
      
      private function CreateRobotMoves() : void
      {
         var _loc1_:BaseMinionMove = null;
         var _loc2_:Array = null;
         var _loc3_:Array = null;
         _loc2_ = new Array(7,14,21,28,35);
         _loc3_ = new Array(30,40,50,60,90);
         _loc1_ = this.CreateMove("Steel Spike",_loc2_[0],MinionMoveClasses.steel_spike,MinionMoveID.steel_spike_t1,"moveIcon_steelSpike",MinionType.TYPE_ROBOT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Machine Shaft");
         _loc1_.m_damage = _loc3_[4];
         _loc2_ = new Array(17,30,50,70,100);
         _loc3_ = new Array(20,30,40,50,80);
         _loc1_ = this.CreateMove("Cog Fallout",_loc2_[0],MinionMoveClasses.cog_fallout,MinionMoveID.cog_fallout_t1,"moveIcon_cogFallout",MinionType.TYPE_ROBOT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_enemiesItHits = 3;
         _loc1_.m_hitsRandomTargets = true;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Cog Explosion");
         _loc1_.m_damage = _loc3_[4];
         _loc2_ = new Array(20,35,60,75,95);
         _loc3_ = new Array(35,45,55,65,90);
         _loc1_ = this.CreateMove("Twin Missile",_loc2_[0],MinionMoveClasses.twin_missile,MinionMoveID.twin_missile_t1,"moveIcon_twinMissile",MinionType.TYPE_ROBOT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_enemiesItHits = 2;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Precision Missiles");
         _loc1_.m_damage = _loc3_[4];
         _loc2_ = new Array(7,14,21,28,35);
         _loc3_ = new Array(25,35,45,55,90);
         _loc1_ = this.CreateMove("Download",_loc2_[0],MinionMoveClasses.download,MinionMoveID.download_t1,"moveIcon_download",MinionType.TYPE_ROBOT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.AddStatToBuffFirstTime(StatType.STAT_ATTACK,false,true,1,25);
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_chanceToBuff = 50;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_chanceToBuff = 75;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_chanceToBuff = 100;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Data Transfer");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_chanceToBuff = 100;
         _loc2_ = new Array(10,18,25,30,45);
         _loc3_ = new Array(40,50,60,70,100);
         _loc1_ = this.CreateMove("Ore Drill",_loc2_[0],MinionMoveClasses.ore_drill,MinionMoveID.ore_drill_t1,"moveIcon_oreDrill",MinionType.TYPE_ROBOT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_moveCoolDownTime = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Copper Puncture");
         _loc1_.m_damage = _loc3_[4];
         _loc2_ = new Array(10,15,25,35,55);
         _loc3_ = new Array(20,30,40,50,80);
         _loc1_ = this.CreateMove("Alloy Coat",_loc2_[0],MinionMoveClasses.alloy_coat,MinionMoveID.alloy_coat_t1,"moveIcon_alloyCoat",MinionType.TYPE_ROBOT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_moveCoolDownTime = 2;
         _loc1_.m_enemiesItHits = 3;
         _loc1_.m_hitsRandomTargets = true;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Metalize");
         _loc1_.m_damage = _loc3_[4];
         _loc2_ = new Array(9,15,25,35,50);
         _loc3_ = new Array(20 * this.m_armorModRate,25 * this.m_armorModRate,30 * this.m_armorModRate,35 * this.m_armorModRate,50 * this.m_armorModRate);
         _loc1_ = this.CreateMove("Metal Shield",_loc2_[0],MinionMoveClasses.metal_shield,MinionMoveID.metal_shield_t1,"moveIcon_metalShield",MinionType.TYPE_ROBOT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_armor = _loc3_[0];
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_armor = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_armor = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_armor = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Solid Plate");
         _loc1_.m_armor = _loc3_[4];
         _loc2_ = new Array(9,15,25,35,50);
         _loc3_ = new Array(50 * this.m_armorModRate,60 * this.m_armorModRate,70 * this.m_armorModRate,80 * this.m_armorModRate,90 * this.m_armorModRate);
         _loc1_ = this.CreateMove("Platinum",_loc2_[0],MinionMoveClasses.platinum,MinionMoveID.platinum_t1,"moveIcon_platinum",MinionType.TYPE_ROBOT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_armor = _loc3_[0];
         _loc1_.m_overTimeTurnsActive = 2;
         _loc1_.m_moveCoolDownTime = 3;
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_armor = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_armor = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_armor = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Titanium");
         _loc1_.m_armor = _loc3_[4];
         _loc2_ = new Array(8,13,20,25,35);
         _loc3_ = new Array(10 * this.m_armorModRate,15 * this.m_armorModRate,20 * this.m_armorModRate,25 * this.m_armorModRate,30 * this.m_armorModRate);
         _loc1_ = this.CreateMove("Solder",_loc2_[0],MinionMoveClasses.solder,MinionMoveID.solder_t1,"moveIcon_solder",MinionType.TYPE_ROBOT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_armor = _loc3_[0];
         _loc1_.m_overTimeTurnsActive = 5;
         _loc1_.m_moveCoolDownTime = 3;
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_armor = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_armor = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_armor = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Steel Binder");
         _loc1_.m_armor = _loc3_[4];
         _loc2_ = new Array(8,13,20,25,35);
         _loc3_ = new Array(2,1,0,1,0);
         _loc1_ = this.CreateMove("Metal Mold",_loc2_[0],MinionMoveClasses.metal_mold,MinionMoveID.metal_mold_t1,"moveIcon_metalMold",MinionType.TYPE_ROBOT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_moveCoolDownTime = _loc3_[0];
         _loc1_.AddStatToBuffFirstTime(StatType.STAT_HEALTH,true,false);
         _loc1_.AddStatToDeBuffFirstTime(StatType.STAT_ATTACK,true,false);
         _loc1_.AddStatToDeBuff(StatType.STAT_SPEED);
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_moveCoolDownTime = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_moveCoolDownTime = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_moveCoolDownTime = _loc3_[3];
         _loc1_.m_stagesOfStatTypeToBuff = 2;
         _loc1_.m_stagesOfStatTypeToDeBuff = -2;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Metal Construct");
         _loc1_.m_moveCoolDownTime = _loc3_[4];
         _loc2_ = new Array(20,40,80,110,160);
         _loc3_ = new Array(35,50,70,90,125);
         _loc1_ = this.CreateMove("Death Call",_loc2_[0],MinionMoveClasses.death_call,MinionMoveID.death_call_t1,"moveIcon_deathCall",MinionType.TYPE_ROBOT,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_enemiesItHits = 3;
         _loc1_.m_moveCoolDownTime = 3;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Death Call 2");
         _loc1_.m_damage = _loc3_[4];
      }
      
      private function CreateTitanMoves() : void
      {
         var _loc1_:BaseMinionMove = null;
         var _loc2_:Array = null;
         var _loc3_:Array = null;
         var _loc4_:Array = null;
         _loc2_ = new Array(8,15,20,28,35);
         _loc3_ = new Array(40,50,60,70,100);
         _loc4_ = new Array(0,0,0,0,0);
         _loc1_ = this.CreateMove("Titan Slash",_loc2_[0],MinionMoveClasses.titan_slash,MinionMoveID.titan_slash_t1,"moveIcon_titanSlash",MinionType.TYPE_TITAN,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_healing = _loc4_[0];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_healing = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_healing = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_healing = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Titan Death Claw");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_healing = _loc4_[4];
         _loc2_ = new Array(10,18,25,30,40);
         _loc3_ = new Array(50,60,70,80,110);
         _loc4_ = new Array(0,0,0,0,0);
         _loc1_ = this.CreateMove("Kings Rush",_loc2_[0],MinionMoveClasses.kings_rush,MinionMoveID.kings_rush_t1,"moveIcon_kingsRush",MinionType.TYPE_TITAN,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_healing = _loc4_[0];
         _loc1_.m_moveCoolDownTime = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_healing = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_healing = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_healing = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Titan Rush");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_healing = _loc4_[4];
         _loc2_ = new Array(12,20,28,33,45);
         _loc3_ = new Array(75,85,95,110,140);
         _loc4_ = new Array(0,0,0,0,0);
         _loc1_ = this.CreateMove("Titan Blast",_loc2_[0],MinionMoveClasses.titan_blast,MinionMoveID.titan_blast_t1,"moveIcon_titanBlast",MinionType.TYPE_TITAN,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_healing = _loc4_[0];
         _loc1_.m_moveCoolDownTime = 5;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_healing = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_healing = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_healing = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Titan Destruction");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_healing = _loc4_[4];
         _loc2_ = new Array(12,20,28,33,45);
         _loc3_ = new Array(50,60,70,80,110);
         _loc4_ = new Array(0,0,0,0,0);
         _loc1_ = this.CreateMove("Dominate",_loc2_[0],MinionMoveClasses.dominate,MinionMoveID.dominate_t1,"moveIcon_dominate",MinionType.TYPE_TITAN,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_healing = _loc4_[0];
         _loc1_.m_moveCoolDownTime = 5;
         _loc1_.AddStatToBuffFirstTime(StatType.STAT_ATTACK,false,true);
         _loc1_.AddStatToBuff(StatType.STAT_SPEED);
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_healing = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_healing = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_healing = _loc4_[3];
         _loc1_.m_stagesOfStatTypeToBuff = 2;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Tyrant");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_healing = _loc4_[4];
         _loc1_.m_stagesOfStatTypeToBuff = 3;
         _loc2_ = new Array(15,22,30,35,50);
         _loc3_ = new Array(40,50,60,70,100);
         _loc4_ = new Array(0,0,0,0,0);
         _loc1_ = this.CreateMove("Titan Slam",_loc2_[0],MinionMoveClasses.titan_slam,MinionMoveID.titan_slam_t1,"moveIcon_titanSlam",MinionType.TYPE_TITAN,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_healing = _loc4_[0];
         _loc1_.m_moveCoolDownTime = 5;
         _loc1_.m_enemiesItHits = 3;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_healing = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_healing = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_healing = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Titan Thrash");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_healing = _loc4_[4];
         _loc2_ = new Array(10,18,25,30,50);
         _loc3_ = new Array(0,0,0,0,0);
         _loc4_ = new Array(45,55,65,75,90);
         _loc1_ = this.CreateMove("Titan Restore",_loc2_[0],MinionMoveClasses.titan_restore,MinionMoveID.titan_restore_t1,"moveIcon_grassBlade",MinionType.TYPE_TITAN,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_healing = _loc4_[0];
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_healing = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_healing = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_healing = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Titan Mend");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_healing = _loc4_[4];
         _loc2_ = new Array(12,20,28,35,55);
         _loc3_ = new Array(0,0,0,0,0);
         _loc4_ = new Array(55,65,75,85,100);
         _loc1_ = this.CreateMove("Titan Light",_loc2_[0],MinionMoveClasses.titan_light,MinionMoveID.titan_light_t1,"moveIcon_titanLight",MinionType.TYPE_TITAN,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_healing = _loc4_[0];
         _loc1_.m_moveCoolDownTime = 1;
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_healing = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_healing = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_healing = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Titan Brillance");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_healing = _loc4_[4];
         _loc2_ = new Array(10,18,25,30,50);
         _loc3_ = new Array(0,0,0,0,0);
         _loc4_ = new Array(45,55,65,75,90);
         _loc1_ = this.CreateMove("Titan Heal",_loc2_[0],MinionMoveClasses.titan_heal,MinionMoveID.titan_heal_t1,"moveIcon_titanHeal",MinionType.TYPE_TITAN,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_healing = _loc4_[0];
         _loc1_.m_moveCoolDownTime = 5;
         _loc1_.m_armor = 10 * this.m_armorModRate;
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_healing = _loc4_[1];
         _loc1_.m_armor = 15 * this.m_armorModRate;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_healing = _loc4_[2];
         _loc1_.m_armor = 20 * this.m_armorModRate;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_healing = _loc4_[3];
         _loc1_.m_armor = 25 * this.m_armorModRate;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Titan Protection");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_healing = _loc4_[4];
         _loc1_.m_armor = 30 * this.m_armorModRate;
         _loc2_ = new Array(20,40,50,60,80);
         _loc3_ = new Array(0,0,0,0,0);
         _loc4_ = new Array(45,55,65,75,90);
         _loc1_ = this.CreateMove("Titan Recovery",_loc2_[0],MinionMoveClasses.titan_recovery,MinionMoveID.titan_recovery_t1,"moveIcon_titanRecovery",MinionType.TYPE_TITAN,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_healing = _loc4_[0];
         _loc1_.m_moveCoolDownTime = 10;
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 5;
         _loc1_.m_isThereABufferBetweenVisualMovesOnMultipleEnemies = false;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_.m_healing = _loc4_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_.m_healing = _loc4_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_.m_healing = _loc4_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Titan Creation");
         _loc1_.m_damage = _loc3_[4];
         _loc1_.m_healing = _loc4_[4];
         _loc2_ = new Array(5,5,5,5,5);
         _loc3_ = new Array(1,2,3,4,6);
         _loc1_ = this.CreateMove("Crazed",_loc2_[0],MinionMoveClasses.crazed,MinionMoveID.crazed_t1,"moveIcon_crazed",MinionType.TYPE_TITAN,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_moveCoolDownTime = 1;
         _loc1_.AddStatToBuffFirstTime(StatType.STAT_ATTACK,false,true);
         _loc1_.AddStatToBuff(StatType.STAT_SPEED);
         _loc1_.AddStatToDeBuffFirstTime(StatType.STAT_HEALTH,false,true);
         _loc1_.m_selfDamage = 10;
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_.m_onlyHitsSelf = true;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_stagesOfStatTypeToBuff = _loc3_[1];
         _loc1_.m_stagesOfStatTypeToDeBuff = -_loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_stagesOfStatTypeToBuff = _loc3_[2];
         _loc1_.m_stagesOfStatTypeToDeBuff = -_loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_stagesOfStatTypeToBuff = _loc3_[3];
         _loc1_.m_stagesOfStatTypeToDeBuff = -_loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Berzerk");
         _loc1_.m_stagesOfStatTypeToBuff = _loc3_[4];
         _loc1_.m_stagesOfStatTypeToDeBuff = -_loc3_[4];
      }
      
      private function CreateNormalMoves() : void
      {
         var _loc1_:BaseMinionMove = null;
         var _loc2_:Array = null;
         var _loc3_:Array = null;
         _loc1_ = this.CreateMove("Claw",2,MinionMoveClasses.claw,MinionMoveID.claw_t1,"moveIcon_claw",MinionType.TYPE_NORMAL,MinionVisualMoveID.VM_claw);
         _loc1_.m_damage = 20;
         _loc1_ = this.CopyMove(_loc1_,5);
         _loc1_.m_damage = 30;
         _loc1_ = this.CopyMove(_loc1_,15);
         _loc1_.m_damage = 35;
         _loc1_.m_additionalRandomDamage = 10;
         _loc1_ = this.CopyMove(_loc1_,20);
         _loc1_.m_damage = 50;
         _loc1_.m_additionalRandomDamage = 15;
         _loc1_ = this.CopyMove(_loc1_,30,"Blood Swipes");
         _loc1_.m_damage = 50;
         _loc1_.m_additionalRandomDamage = 20;
         _loc1_.m_selfHeal = 20;
         this.m_currMinionMoveClass = MinionMoveClasses.tackle;
         this.m_currFirstMinionMoveID = MinionMoveID.tackle_t1;
         this.m_currMoveIconName = "moveIcon_tackle";
         this.m_currMinionMoveVisuals = MinionVisualMoveID.VISUALS_SameAsClass;
         _loc1_ = this.old_NormalCM(0,"Tackle",25,0,0,3);
         _loc1_ = this.old_NormalCM(1,"Tackle  lv.2",35,0,0,7);
         _loc1_ = this.old_NormalCM(2,"Tackle  lv.3",45,0,0,15);
         _loc1_ = this.old_NormalCM(3,"Tackle  lv.4",55,0,0,20);
         _loc1_ = this.old_NormalCM(4,"Thrash",90,0,0,35);
         this.m_currMinionMoveClass = MinionMoveClasses.poison_tooth;
         this.m_currFirstMinionMoveID = MinionMoveID.poison_tooth_t1;
         this.m_currMoveIconName = "moveIcon_poisonTooth";
         this.m_currMinionMoveVisuals = MinionVisualMoveID.VM_poison_tooth;
         this.m_currMinionDOTMoveVisuals = MinionVisualMoveID.VM_poisonToothPoisonBubbles;
         _loc1_ = this.old_NormalCM(0,"Poison Tooth",20,0,5,6);
         _loc1_ = this.old_NormalCM(1,"Poison Tooth  lv.2",25,0,8,10);
         _loc1_ = this.old_NormalCM(2,"Poison Tooth  lv.3",30,0,10,15);
         _loc1_ = this.old_NormalCM(3,"Poison Tooth  lv.4",35,0,13,20);
         _loc1_ = this.old_NormalCM(4,"Toxic Fang",50,0,20,35);
         this.m_currMinionMoveClass = MinionMoveClasses.reckless_dash;
         this.m_currFirstMinionMoveID = MinionMoveID.reckless_dash_t1;
         this.m_currMoveIconName = "moveIcon_recklessDash";
         this.m_currMinionMoveVisuals = MinionVisualMoveID.VISUALS_SameAsClass;
         _loc1_ = this.old_NormalCM(0,"Reckless Dash",35,0,0,6);
         _loc1_.m_selfDamage = 5;
         _loc1_ = this.old_NormalCM(1,"Reckless Dash  lv.2",45,0,0,10);
         _loc1_.m_selfDamage = 8;
         _loc1_ = this.old_NormalCM(2,"Reckless Dash  lv.3",55,0,0,15);
         _loc1_.m_selfDamage = 10;
         _loc1_ = this.old_NormalCM(3,"Reckless Dash  lv.4",70,0,0,25);
         _loc1_.m_selfDamage = 15;
         _loc1_ = this.old_NormalCM(4,"Desperate Barrage",150,0,0,35);
         _loc1_.m_selfDamage = 50;
         this.m_currMinionMoveClass = MinionMoveClasses.crush;
         this.m_currFirstMinionMoveID = MinionMoveID.crush_t1;
         this.m_currMoveIconName = "moveIcon_crush";
         this.m_currMinionMoveVisuals = MinionVisualMoveID.VISUALS_SameAsClass;
         _loc1_ = this.old_NormalCM(0,"Crush",20,0,0,6);
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_.m_stagesOfStatTypeToDeBuff = -1;
         _loc1_.m_chanceToDeBuff = 10;
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_ = this.old_NormalCM(1,"Crush  lv.2",30,0,0,14);
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_.m_stagesOfStatTypeToDeBuff = -1;
         _loc1_.m_chanceToDeBuff = 10;
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_ = this.old_NormalCM(2,"Crush  lv.3",40,0,0,28);
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_.m_stagesOfStatTypeToDeBuff = -1;
         _loc1_.m_chanceToDeBuff = 10;
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_ = this.old_NormalCM(3,"Crush  lv.4",50,0,0,35);
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_.m_stagesOfStatTypeToDeBuff = -1;
         _loc1_.m_chanceToDeBuff = 10;
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_ = this.old_NormalCM(4,"Overwhelm",80,0,0,40);
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_.m_stagesOfStatTypeToDeBuff = -1;
         _loc1_.m_chanceToDeBuff = 10;
         _loc1_.m_doesDeBuffTargets = true;
         this.m_currMinionMoveClass = MinionMoveClasses.roar;
         this.m_currFirstMinionMoveID = MinionMoveID.roar_t1;
         this.m_currMoveIconName = "moveIcon_roar";
         this.m_currMinionMoveVisuals = MinionVisualMoveID.VM_roar;
         _loc1_ = this.old_NormalCM(0,"Roar",0,0,0,3);
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_.m_stagesOfStatTypeToDeBuff = -1;
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_ = this.old_NormalCM(1,"Roar  lv.2",0,0,0,10);
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_.m_stagesOfStatTypeToDeBuff = -2;
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_ = this.old_NormalCM(2,"Roar  lv.3",0,0,0,20);
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_.m_stagesOfStatTypeToDeBuff = -3;
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_ = this.old_NormalCM(3,"Roar  lv.4",0,0,0,30);
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_.m_stagesOfStatTypeToDeBuff = -4;
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_ = this.old_NormalCM(4,"Demoralize",0,0,0,50);
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_.m_stagesOfStatTypeToDeBuff = -6;
         _loc1_.m_doesDeBuffTargets = true;
         this.m_currMinionMoveClass = MinionMoveClasses.desperation;
         this.m_currFirstMinionMoveID = MinionMoveID.desperation_t1;
         this.m_currMoveIconName = "moveIcon_ashenReminder";
         this.m_currMinionMoveVisuals = MinionVisualMoveID.VM_desperation;
         _loc1_ = this.old_FireCM(0,"Desperation",20,0,0,0,0);
         _loc1_.m_selfDamage = 10;
         _loc1_.m_selfPercentageDamage = 20;
         _loc1_.m_moveType = MinionType.TYPE_NORMAL;
         _loc1_ = this.CreateMove("Spike",1,MinionMoveClasses.spike,MinionMoveID.spike_t1,"moveIcon_spike",MinionType.TYPE_NORMAL,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_moveCoolDownTime = 1;
         _loc1_.m_damage = 20;
         _loc1_.m_accuracy = 95;
         _loc1_ = this.CopyMove(_loc1_,1);
         _loc1_.m_damage = 30;
         _loc1_.m_accuracy = 90;
         _loc1_ = this.CopyMove(_loc1_,1);
         _loc1_.m_damage = 35;
         _loc1_.m_accuracy = 85;
         _loc1_ = this.CopyMove(_loc1_,1);
         _loc1_.m_damage = 45;
         _loc1_.m_accuracy = 80;
         _loc1_ = this.CopyMove(_loc1_,1,"Hookshot");
         _loc1_.m_damage = 45;
         _loc1_.m_accuracy = 100;
         _loc1_ = this.CreateMove("Pound",3,MinionMoveClasses.pound,MinionMoveID.pound_t1,"moveIcon_pound",MinionType.TYPE_NORMAL,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = 20;
         _loc1_ = this.CopyMove(_loc1_,7);
         _loc1_.m_damage = 30;
         _loc1_ = this.CopyMove(_loc1_,15);
         _loc1_.m_damage = 40;
         _loc1_ = this.CopyMove(_loc1_,20);
         _loc1_.m_damage = 50;
         _loc1_ = this.CopyMove(_loc1_,35,"Slam");
         _loc1_.m_damage = 80;
         _loc2_ = new Array(2,5,10,15,25);
         _loc3_ = new Array(30,40,50,60,100);
         _loc1_ = this.CreateMove("Grind",_loc2_[0],MinionMoveClasses.grind,MinionMoveID.grind_t1,"moveIcon_grind",MinionType.TYPE_NORMAL,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_chanceToBuff = 10;
         _loc1_.m_doesBuffTargets = true;
         _loc1_.m_stagesOfStatTypeToBuff = 1;
         _loc1_.AddStatToBuff(StatType.STAT_ATTACK);
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Pulverize");
         _loc1_.m_chanceToBuff = 20;
         _loc1_.m_damage = _loc3_[4];
         _loc2_ = new Array(2,5,5,5,5);
         _loc3_ = new Array(40,50,75,100,180);
         _loc1_ = this.CreateMove("Wild Lance",_loc2_[0],MinionMoveClasses.wild_lance,MinionMoveID.wild_lance_t1,"moveIcon_wildLance",MinionType.TYPE_NORMAL,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_doesDeBuffSelf = true;
         _loc1_.m_stagesOfStatTypeToDeBuff = -1;
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_stagesOfStatTypeToDeBuff = -2;
         _loc1_.m_damage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Heedless Puncture");
         _loc1_.m_stagesOfStatTypeToDeBuff = -4;
         _loc1_.m_damage = _loc3_[4];
         _loc2_ = new Array(3,10,20,30,50);
         _loc3_ = new Array(-1,-2,-3,-4,-5);
         _loc1_ = this.CreateMove("Slow",_loc2_[0],MinionMoveClasses.slow,MinionMoveID.slow_t1,"moveIcon_slow",MinionType.TYPE_NORMAL,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[0];
         _loc1_.AddStatToDeBuff(StatType.STAT_SPEED);
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Cripple");
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[4];
         _loc2_ = new Array(6,10,15,25,35);
         _loc3_ = new Array(50,75,100,125,150);
         _loc1_ = this.CreateMove("Reflect Damage",_loc2_[0],MinionMoveClasses.reflect_damage,MinionMoveID.reflect_damage_t1,"moveIcon_mirrorSkin",MinionType.TYPE_NORMAL,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_setReflectDamageAmount = _loc3_[0];
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_setReflectDamageAmount = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_setReflectDamageAmount = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_setReflectDamageAmount = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Diamond Skin");
         _loc1_.m_setReflectDamageAmount = _loc3_[4];
         _loc2_ = new Array(3,10,20,30,50);
         _loc3_ = new Array(-1,-2,-3,-4,-5);
         _loc1_ = this.CreateMove("Tire",_loc2_[0],MinionMoveClasses.tire,MinionMoveID.tire_t1,"moveIcon_tire",MinionType.TYPE_NORMAL,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[0];
         _loc1_.AddStatToDeBuff(StatType.STAT_ENERGY);
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Exhaust");
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[4];
         _loc2_ = new Array(0,0,0,0,0);
         _loc3_ = new Array(50,75,100,100,100);
         _loc1_ = this.CreateMove("Energize",_loc2_[0],MinionMoveClasses.energize,MinionMoveID.energize_t1,"moveIcon_energize",MinionType.TYPE_NORMAL,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_energyPercentageRestored = _loc3_[0];
         _loc1_.m_moveCoolDownTime = 5;
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_.m_onlyHitsSelf = true;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_energyPercentageRestored = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_energyPercentageRestored = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_energyPercentageRestored = _loc3_[3];
         _loc1_.m_moveCoolDownTime = 3;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4]);
         _loc1_.m_energyPercentageRestored = _loc3_[4];
         _loc1_.m_moveCoolDownTime = 1;
         _loc2_ = new Array(0,0,0,0,0);
         _loc3_ = new Array(50,75,100,100,100);
         _loc1_ = this.CreateMove("Invigorate",_loc2_[0],MinionMoveClasses.invigorate,MinionMoveID.invigorate_t1,"moveIcon_swiftMend",MinionType.TYPE_NORMAL,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_energyPercentageRestored = _loc3_[0];
         _loc1_.m_moveCoolDownTime = 5;
         _loc1_.m_alliesItHits = 1;
         _loc1_.m_enemiesItHits = 0;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_energyPercentageRestored = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_energyPercentageRestored = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_energyPercentageRestored = _loc3_[3];
         _loc1_.m_moveCoolDownTime = 3;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4]);
         _loc1_.m_energyPercentageRestored = _loc3_[4];
         _loc1_.m_moveCoolDownTime = 1;
      }
      
      private function CreatePassiveMoves() : void
      {
         var _loc1_:BaseMinionMove = null;
         this.m_currMinionMoveClass = MinionMoveClasses.fortitude;
         this.m_currFirstMinionMoveID = MinionMoveID.fortitude_t1;
         this.m_currMoveIconName = "moveIcon_fortitude";
         _loc1_ = this.PassiveCM(0,"Fortitude",StatType.STAT_HEALTH,10);
         _loc1_ = this.PassiveCM(1,"Fortitude  lv.2",StatType.STAT_HEALTH,15);
         _loc1_ = this.PassiveCM(2,"Fortitude  lv.3",StatType.STAT_HEALTH,20);
         _loc1_ = this.PassiveCM(3,"Fortitude  lv.4",StatType.STAT_HEALTH,30);
         _loc1_ = this.PassiveCM(4,"Fortitude  lv.5",StatType.STAT_HEALTH,40);
         this.m_currMinionMoveClass = MinionMoveClasses.perseverance;
         this.m_currFirstMinionMoveID = MinionMoveID.perseverance_t1;
         this.m_currMoveIconName = "moveIcon_persaverance";
         _loc1_ = this.PassiveCM(0,"Perseverance",StatType.STAT_HEALTH,15);
         _loc1_ = this.PassiveCM(1,"Perseverance  lv.2",StatType.STAT_HEALTH,20);
         _loc1_ = this.PassiveCM(2,"Perseverance  lv.3",StatType.STAT_HEALTH,25);
         _loc1_ = this.PassiveCM(3,"Perseverance  lv.4",StatType.STAT_HEALTH,35);
         _loc1_ = this.PassiveCM(4,"Perseverance  lv.5",StatType.STAT_HEALTH,50);
         this.m_currMinionMoveClass = MinionMoveClasses.hulk_inspiration;
         this.m_currFirstMinionMoveID = MinionMoveID.hulk_inspiration_t1;
         this.m_currMoveIconName = "moveIcon_hulkInspiration";
         _loc1_ = this.PassiveCM(0,"Hulk Inspiration",StatType.STAT_HEALTH,5,true);
         _loc1_ = this.PassiveCM(1,"Hulk Inspiration  lv.2",StatType.STAT_HEALTH,10,true);
         _loc1_ = this.PassiveCM(2,"Hulk Inspiration  lv.3",StatType.STAT_HEALTH,15,true);
         _loc1_ = this.PassiveCM(3,"Hulk Inspiration  lv.4",StatType.STAT_HEALTH,20,true);
         _loc1_ = this.PassiveCM(4,"Hulk Inspiration  lv.5",StatType.STAT_HEALTH,25,true);
         this.m_currMinionMoveClass = MinionMoveClasses.efficiency;
         this.m_currFirstMinionMoveID = MinionMoveID.efficiency_t1;
         this.m_currMoveIconName = "moveIcon_efficiency";
         _loc1_ = this.PassiveCM(0,"Efficiency",StatType.STAT_ENERGY,10);
         _loc1_ = this.PassiveCM(1,"Efficiency  lv.2",StatType.STAT_ENERGY,15);
         _loc1_ = this.PassiveCM(2,"Efficiency  lv.3",StatType.STAT_ENERGY,20);
         _loc1_ = this.PassiveCM(3,"Efficiency  lv.4",StatType.STAT_ENERGY,30);
         _loc1_ = this.PassiveCM(4,"Efficiency  lv.5",StatType.STAT_ENERGY,40);
         this.m_currMinionMoveClass = MinionMoveClasses.skillful;
         this.m_currFirstMinionMoveID = MinionMoveID.skillful_t1;
         this.m_currMoveIconName = "moveIcon_skillfull";
         _loc1_ = this.PassiveCM(0,"Skillful",StatType.STAT_ENERGY,15);
         _loc1_ = this.PassiveCM(1,"Skillful  lv.2",StatType.STAT_ENERGY,20);
         _loc1_ = this.PassiveCM(2,"Skillful  lv.3",StatType.STAT_ENERGY,25);
         _loc1_ = this.PassiveCM(3,"Skillful  lv.4",StatType.STAT_ENERGY,35);
         _loc1_ = this.PassiveCM(4,"Skillful  lv.5",StatType.STAT_ENERGY,50);
         this.m_currMinionMoveClass = MinionMoveClasses.energizing_inspiration;
         this.m_currFirstMinionMoveID = MinionMoveID.energizing_inspiration_t1;
         this.m_currMoveIconName = "moveIcon_energizingInspiration";
         _loc1_ = this.PassiveCM(0,"Energizing Inspiration",StatType.STAT_ENERGY,5,true);
         _loc1_ = this.PassiveCM(1,"Energizing Inspiration  lv.2",StatType.STAT_ENERGY,10,true);
         _loc1_ = this.PassiveCM(2,"Energizing Inspiration  lv.3",StatType.STAT_ENERGY,15,true);
         _loc1_ = this.PassiveCM(3,"Energizing Inspiration  lv.4",StatType.STAT_ENERGY,20,true);
         _loc1_ = this.PassiveCM(4,"Energizing Inspiration  lv.5",StatType.STAT_ENERGY,25,true);
         this.m_currMinionMoveClass = MinionMoveClasses.vicious;
         this.m_currFirstMinionMoveID = MinionMoveID.vicious_t1;
         this.m_currMoveIconName = "moveIcon_vicious";
         _loc1_ = this.PassiveCM(0,"Vicious",StatType.STAT_ATTACK,10);
         _loc1_ = this.PassiveCM(1,"Vicious  lv.2",StatType.STAT_ATTACK,15);
         _loc1_ = this.PassiveCM(2,"Vicious  lv.3",StatType.STAT_ATTACK,20);
         _loc1_ = this.PassiveCM(3,"Vicious  lv.4",StatType.STAT_ATTACK,30);
         _loc1_ = this.PassiveCM(4,"Vicious  lv.5",StatType.STAT_ATTACK,40);
         this.m_currMinionMoveClass = MinionMoveClasses.ferocity;
         this.m_currFirstMinionMoveID = MinionMoveID.ferocity_t1;
         this.m_currMoveIconName = "moveIcon_ferocity";
         _loc1_ = this.PassiveCM(0,"Ferocity",StatType.STAT_ATTACK,15);
         _loc1_ = this.PassiveCM(1,"Ferocity  lv.2",StatType.STAT_ATTACK,20);
         _loc1_ = this.PassiveCM(2,"Ferocity  lv.3",StatType.STAT_ATTACK,25);
         _loc1_ = this.PassiveCM(3,"Ferocity  lv.4",StatType.STAT_ATTACK,35);
         _loc1_ = this.PassiveCM(4,"Ferocity  lv.5",StatType.STAT_ATTACK,50);
         this.m_currMinionMoveClass = MinionMoveClasses.deadly_inspiration;
         this.m_currFirstMinionMoveID = MinionMoveID.deadly_inspiration_t1;
         this.m_currMoveIconName = "moveIcon_deadlyInspiration";
         _loc1_ = this.PassiveCM(0,"Deadly Inspiration",StatType.STAT_ATTACK,5,true);
         _loc1_ = this.PassiveCM(1,"Deadly Inspiration  lv.2",StatType.STAT_ATTACK,10,true);
         _loc1_ = this.PassiveCM(2,"Deadly Inspiration  lv.3",StatType.STAT_ATTACK,15,true);
         _loc1_ = this.PassiveCM(3,"Deadly Inspiration  lv.4",StatType.STAT_ATTACK,20,true);
         _loc1_ = this.PassiveCM(4,"Deadly Inspiration  lv.5",StatType.STAT_ATTACK,25,true);
         this.m_currMinionMoveClass = MinionMoveClasses.priest;
         this.m_currFirstMinionMoveID = MinionMoveID.priest_t1;
         this.m_currMoveIconName = "moveIcon_priest";
         _loc1_ = this.PassiveCM(0,"Meditation",StatType.STAT_HEALING,10);
         _loc1_ = this.PassiveCM(1,"Meditation  lv.2",StatType.STAT_HEALING,15);
         _loc1_ = this.PassiveCM(2,"Meditation  lv.3",StatType.STAT_HEALING,20);
         _loc1_ = this.PassiveCM(3,"Meditation  lv.4",StatType.STAT_HEALING,30);
         _loc1_ = this.PassiveCM(4,"Meditation  lv.5",StatType.STAT_HEALING,40);
         this.m_currMinionMoveClass = MinionMoveClasses.cleric;
         this.m_currFirstMinionMoveID = MinionMoveID.cleric_t1;
         this.m_currMoveIconName = "moveIcon_cleric";
         _loc1_ = this.PassiveCM(0,"Contemplation",StatType.STAT_HEALING,15);
         _loc1_ = this.PassiveCM(1,"Contemplation  lv.2",StatType.STAT_HEALING,20);
         _loc1_ = this.PassiveCM(2,"Contemplation  lv.3",StatType.STAT_HEALING,25);
         _loc1_ = this.PassiveCM(3,"Contemplation  lv.4",StatType.STAT_HEALING,35);
         _loc1_ = this.PassiveCM(4,"Contemplation  lv.5",StatType.STAT_HEALING,50);
         this.m_currMinionMoveClass = MinionMoveClasses.mending_inspiration;
         this.m_currFirstMinionMoveID = MinionMoveID.mending_inspiration_t1;
         this.m_currMoveIconName = "moveIcon_mendingInspiration";
         _loc1_ = this.PassiveCM(0,"Mending Inspiration",StatType.STAT_HEALING,5,true);
         _loc1_ = this.PassiveCM(1,"Mending Inspiration  lv.2",StatType.STAT_HEALING,10,true);
         _loc1_ = this.PassiveCM(2,"Mending Inspiration  lv.3",StatType.STAT_HEALING,15,true);
         _loc1_ = this.PassiveCM(3,"Mending Inspiration  lv.4",StatType.STAT_HEALING,20,true);
         _loc1_ = this.PassiveCM(4,"Mending Inspiration  lv.5",StatType.STAT_HEALING,25,true);
         this.m_currMinionMoveClass = MinionMoveClasses.quickness;
         this.m_currFirstMinionMoveID = MinionMoveID.quickness_t1;
         this.m_currMoveIconName = "moveIcon_quickness";
         _loc1_ = this.PassiveCM(0,"Quickness",StatType.STAT_SPEED,10);
         _loc1_ = this.PassiveCM(1,"Quickness  lv.2",StatType.STAT_SPEED,15);
         _loc1_ = this.PassiveCM(2,"Quickness  lv.3",StatType.STAT_SPEED,20);
         _loc1_ = this.PassiveCM(3,"Quickness  lv.4",StatType.STAT_SPEED,30);
         _loc1_ = this.PassiveCM(4,"Quickness  lv.5",StatType.STAT_SPEED,40);
         this.m_currMinionMoveClass = MinionMoveClasses.agility;
         this.m_currFirstMinionMoveID = MinionMoveID.agility_t1;
         this.m_currMoveIconName = "moveIcon_agility";
         _loc1_ = this.PassiveCM(0,"Agility",StatType.STAT_SPEED,15);
         _loc1_ = this.PassiveCM(1,"Agility  lv.2",StatType.STAT_SPEED,20);
         _loc1_ = this.PassiveCM(2,"Agility  lv.3",StatType.STAT_SPEED,25);
         _loc1_ = this.PassiveCM(3,"Agility  lv.4",StatType.STAT_SPEED,35);
         _loc1_ = this.PassiveCM(4,"Agility  lv.5",StatType.STAT_SPEED,50);
         this.m_currMinionMoveClass = MinionMoveClasses.agile_inspiration;
         this.m_currFirstMinionMoveID = MinionMoveID.agile_inspiration_t1;
         this.m_currMoveIconName = "moveIcon_agileInspiration";
         _loc1_ = this.PassiveCM(0,"Agile Inspiration",StatType.STAT_SPEED,5,true);
         _loc1_ = this.PassiveCM(1,"Agile Inspiration  lv.2",StatType.STAT_SPEED,10,true);
         _loc1_ = this.PassiveCM(2,"Agile Inspiration  lv.3",StatType.STAT_SPEED,15,true);
         _loc1_ = this.PassiveCM(3,"Agile Inspiration  lv.4",StatType.STAT_SPEED,20,true);
         _loc1_ = this.PassiveCM(4,"Agile Inspiration  lv.5",StatType.STAT_SPEED,25,true);
         this.m_currMinionMoveClass = MinionMoveClasses.mirror_skin;
         this.m_currFirstMinionMoveID = MinionMoveID.mirror_skin_t1;
         this.m_currMoveIconName = "moveIcon_mirrorSkin";
         _loc1_ = this.PassiveCM(0,"Mirror Skin",StatType.STAT_NONE);
         _loc1_.m_setReflectDamageAmount = 20;
         _loc1_ = this.PassiveCM(1,"Mirror Skin  lv.2",StatType.STAT_NONE);
         _loc1_.m_setReflectDamageAmount = 35;
         _loc1_ = this.PassiveCM(2,"Mirror Skin  lv.3",StatType.STAT_NONE);
         _loc1_.m_setReflectDamageAmount = 50;
         _loc1_ = this.PassiveCM(3,"Mirror Skin  lv.4",StatType.STAT_NONE);
         _loc1_.m_setReflectDamageAmount = 60;
         _loc1_ = this.PassiveCM(4,"Mirror Skin  lv.5",StatType.STAT_NONE);
         _loc1_.m_setReflectDamageAmount = 80;
         this.m_currMinionMoveClass = MinionMoveClasses.focus;
         this.m_currFirstMinionMoveID = MinionMoveID.focus_t1;
         this.m_currMoveIconName = "moveIcon_focus";
         _loc1_ = this.PassiveCM(0,"Focus",StatType.STAT_NONE);
         _loc1_.m_increasedExtraCritChance = 5;
         _loc1_ = this.PassiveCM(1,"Focus  lv.2",StatType.STAT_NONE);
         _loc1_.m_increasedExtraCritChance = 7;
         _loc1_ = this.PassiveCM(2,"Focus  lv.3",StatType.STAT_NONE);
         _loc1_.m_increasedExtraCritChance = 10;
         _loc1_ = this.PassiveCM(3,"Focus  lv.4",StatType.STAT_NONE);
         _loc1_.m_increasedExtraCritChance = 15;
         _loc1_ = this.PassiveCM(4,"Focus  lv.5",StatType.STAT_NONE);
         _loc1_.m_increasedExtraCritChance = 20;
         this.m_currMinionMoveClass = MinionMoveClasses.concentration;
         this.m_currFirstMinionMoveID = MinionMoveID.concentration_t1;
         this.m_currMoveIconName = "moveIcon_concentration";
         _loc1_ = this.PassiveCM(0,"Concentration",StatType.STAT_NONE);
         _loc1_.m_increasedExtraCritChance = 7;
         _loc1_ = this.PassiveCM(1,"Concentration  lv.2",StatType.STAT_NONE);
         _loc1_.m_increasedExtraCritChance = 10;
         _loc1_ = this.PassiveCM(2,"Concentration  lv.3",StatType.STAT_NONE);
         _loc1_.m_increasedExtraCritChance = 12;
         _loc1_ = this.PassiveCM(3,"Concentration  lv.4",StatType.STAT_NONE);
         _loc1_.m_increasedExtraCritChance = 17;
         _loc1_ = this.PassiveCM(4,"Concentration  lv.5",StatType.STAT_NONE);
         _loc1_.m_increasedExtraCritChance = 25;
         this.m_currMinionMoveClass = MinionMoveClasses.rock_skin;
         this.m_currFirstMinionMoveID = MinionMoveID.rock_skin_t1;
         this.m_currMoveIconName = "moveIcon_rockSkin";
         _loc1_ = this.PassiveCM(0,"Rock Skin",StatType.STAT_NONE);
         _loc1_.m_armor = 10 * this.m_armorModRate;
         _loc1_ = this.PassiveCM(1,"Rock Skin  lv.2",StatType.STAT_NONE);
         _loc1_.m_armor = 15 * this.m_armorModRate;
         _loc1_ = this.PassiveCM(2,"Rock Skin  lv.3",StatType.STAT_NONE);
         _loc1_.m_armor = 20 * this.m_armorModRate;
         _loc1_ = this.PassiveCM(3,"Rock Skin  lv.4",StatType.STAT_NONE);
         _loc1_.m_armor = 30 * this.m_armorModRate;
         _loc1_ = this.PassiveCM(4,"Rock Skin  lv.5",StatType.STAT_NONE);
         _loc1_.m_armor = 40 * this.m_armorModRate;
         this.m_currMinionMoveClass = MinionMoveClasses.diamond_skin;
         this.m_currFirstMinionMoveID = MinionMoveID.diamond_skin_t1;
         this.m_currMoveIconName = "moveIcon_diamondSkin";
         _loc1_ = this.PassiveCM(0,"Diamond Skin",StatType.STAT_NONE);
         _loc1_.m_armor = 15 * this.m_armorModRate;
         _loc1_ = this.PassiveCM(1,"Diamond Skin  lv.2",StatType.STAT_NONE);
         _loc1_.m_armor = 20 * this.m_armorModRate;
         _loc1_ = this.PassiveCM(2,"Diamond Skin  lv.3",StatType.STAT_NONE);
         _loc1_.m_armor = 25 * this.m_armorModRate;
         _loc1_ = this.PassiveCM(3,"Diamond Skin  lv.4",StatType.STAT_NONE);
         _loc1_.m_armor = 35 * this.m_armorModRate;
         _loc1_ = this.PassiveCM(4,"Diamond Skin  lv.5",StatType.STAT_NONE);
         _loc1_.m_armor = 50 * this.m_armorModRate;
         this.m_currMinionMoveClass = MinionMoveClasses.diamond_inspiration;
         this.m_currFirstMinionMoveID = MinionMoveID.diamond_inspiration_t1;
         this.m_currMoveIconName = "moveIcon_diamondInspiration";
         _loc1_ = this.PassiveCM(0,"Diamond Inspiration",StatType.STAT_NONE,0,true);
         _loc1_.m_armor = 5 * this.m_armorModRate;
         _loc1_ = this.PassiveCM(1,"Diamond Inspiration  lv.2",StatType.STAT_NONE,0,true);
         _loc1_.m_armor = 10 * this.m_armorModRate;
         _loc1_ = this.PassiveCM(2,"Diamond Inspiration  lv.3",StatType.STAT_NONE,0,true);
         _loc1_.m_armor = 15 * this.m_armorModRate;
         _loc1_ = this.PassiveCM(3,"Diamond Inspiration  lv.4",StatType.STAT_NONE,0,true);
         _loc1_.m_armor = 20 * this.m_armorModRate;
         _loc1_ = this.PassiveCM(4,"Diamond Inspiration  lv.5",StatType.STAT_NONE,0,true);
         _loc1_.m_armor = 25 * this.m_armorModRate;
         this.m_currMinionMoveClass = MinionMoveClasses.mirror_coating;
         this.m_currFirstMinionMoveID = MinionMoveID.mirror_coating_t1;
         this.m_currMoveIconName = "moveIcon_mirrorCoating";
         _loc1_ = this.PassiveCM(0,"Mirror Coating",StatType.STAT_NONE,0,true);
         _loc1_.m_setReflectDamageAmount = 5;
         _loc1_ = this.PassiveCM(1,"Mirror Coating  lv.2",StatType.STAT_NONE,0,true);
         _loc1_.m_setReflectDamageAmount = 10;
         _loc1_ = this.PassiveCM(2,"Mirror Coating  lv.3",StatType.STAT_NONE,0,true);
         _loc1_.m_setReflectDamageAmount = 15;
         _loc1_ = this.PassiveCM(3,"Mirror Coating  lv.4",StatType.STAT_NONE,0,true);
         _loc1_.m_setReflectDamageAmount = 25;
         _loc1_ = this.PassiveCM(4,"Mirror Coating  lv.5",StatType.STAT_NONE,0,true);
         _loc1_.m_setReflectDamageAmount = 32;
      }
      
      private function PassiveCM(param1:int, param2:String, param3:int, param4:int = 0, param5:Boolean = false) : BaseMinionMove
      {
         var _loc6_:BaseMinionMove = null;
         (_loc6_ = new BaseMinionMove()).m_moveID = this.m_currFirstMinionMoveID + param1;
         _loc6_.m_moveClass = this.m_currMinionMoveClass;
         _loc6_.m_moveTier = param1;
         _loc6_.m_visualMoveID = this.m_currMinionMoveVisuals;
         _loc6_.m_visualDOTMoveID = this.m_currMinionDOTMoveVisuals;
         _loc6_.m_moveIcon = this.m_currMoveIconName;
         _loc6_.m_moveName = param2;
         _loc6_.m_energyUsed = 0;
         if(param5)
         {
            _loc6_.m_isGlobalPassive = true;
         }
         else
         {
            _loc6_.m_isPassive = true;
         }
         if(param3 != StatType.STAT_NONE)
         {
            _loc6_.m_amountOfStatTypeToBuffPercentage = param4;
            _loc6_.AddStatToBuff(param3);
         }
         this.m_allMoves[_loc6_.m_moveID] = _loc6_;
         return _loc6_;
      }
      
      private function CreateMove(param1:String, param2:int, param3:int, param4:int, param5:String, param6:int, param7:int, param8:int = -99) : BaseMinionMove
      {
         var _loc9_:BaseMinionMove = null;
         (_loc9_ = new BaseMinionMove()).m_moveID = param4;
         _loc9_.m_moveClass = param3;
         _loc9_.m_moveTier = 0;
         _loc9_.m_visualMoveID = param7;
         _loc9_.m_moveIcon = param5;
         _loc9_.m_moveType = param6;
         _loc9_.m_moveName = param1;
         _loc9_.m_energyUsed = param2;
         if(param8 != -99)
         {
            _loc9_.m_visualDOTMoveID = param8;
         }
         else
         {
            _loc9_.m_visualDOTMoveID = param7;
         }
         this.m_allMoves[_loc9_.m_moveID] = _loc9_;
         return _loc9_;
      }
      
      private function CopyMove(param1:BaseMinionMove, param2:int, param3:String = null) : BaseMinionMove
      {
         var _loc4_:BaseMinionMove = null;
         ++(_loc4_ = param1.GetMoveCopy()).m_moveTier;
         ++_loc4_.m_moveID;
         _loc4_.m_energyUsed = param2;
         if(param3 == null)
         {
            _loc4_.m_moveName = this.m_allMoves[_loc4_.m_moveID - _loc4_.m_moveTier].m_moveName + "  lv." + (_loc4_.m_moveTier + 1);
         }
         else
         {
            _loc4_.m_moveName = param3;
         }
         this.m_allMoves[_loc4_.m_moveID] = _loc4_;
         return _loc4_;
      }
      
      private function old_FireCM(param1:int, param2:String, param3:int, param4:int, param5:int, param6:int, param7:int, param8:int = 0, param9:int = 1, param10:Boolean = false) : BaseMinionMove
      {
         var _loc11_:BaseMinionMove = null;
         (_loc11_ = new BaseMinionMove()).m_moveID = this.m_currFirstMinionMoveID + param1;
         _loc11_.m_moveClass = this.m_currMinionMoveClass;
         _loc11_.m_moveTier = param1;
         _loc11_.m_visualMoveID = this.m_currMinionMoveVisuals;
         _loc11_.m_visualDOTMoveID = this.m_currMinionDOTMoveVisuals;
         _loc11_.m_moveIcon = this.m_currMoveIconName;
         _loc11_.m_moveType = MinionType.TYPE_FIRE;
         _loc11_.m_enemiesItHits = param9;
         _loc11_.m_moveName = param2;
         _loc11_.m_damage = param3;
         _loc11_.m_additionalRandomDamage = param4;
         _loc11_.m_DOTDamage = param5;
         _loc11_.m_additionalDOTDamage = param6;
         _loc11_.m_energyUsed = param7;
         _loc11_.m_moveCoolDownTime = param8;
         _loc11_.m_hitsRandomTargets = param10;
         this.m_allMoves[_loc11_.m_moveID] = _loc11_;
         return _loc11_;
      }
      
      private function old_NormalCM(param1:int, param2:String, param3:int, param4:int, param5:int, param6:int, param7:int = 100, param8:int = 0) : BaseMinionMove
      {
         var _loc9_:BaseMinionMove = null;
         (_loc9_ = new BaseMinionMove()).m_moveID = this.m_currFirstMinionMoveID + param1;
         _loc9_.m_moveClass = this.m_currMinionMoveClass;
         _loc9_.m_moveTier = param1;
         _loc9_.m_enemiesItHits = 1;
         _loc9_.m_accuracy = param7;
         _loc9_.m_visualMoveID = this.m_currMinionMoveVisuals;
         _loc9_.m_visualDOTMoveID = this.m_currMinionDOTMoveVisuals;
         _loc9_.m_moveIcon = this.m_currMoveIconName;
         _loc9_.m_moveType = MinionType.TYPE_NORMAL;
         _loc9_.m_moveName = param2;
         _loc9_.m_damage = param3;
         _loc9_.m_additionalRandomDamage = param4;
         _loc9_.m_DOTDamage = param5;
         _loc9_.m_energyUsed = param6;
         _loc9_.m_moveCoolDownTime = param8;
         this.m_allMoves[_loc9_.m_moveID] = _loc9_;
         return _loc9_;
      }
      
      private function old_EnergyCM(param1:int, param2:String, param3:int, param4:int, param5:int, param6:int = 1, param7:int = 100, param8:int = 0, param9:int = 0) : BaseMinionMove
      {
         var _loc10_:BaseMinionMove = null;
         (_loc10_ = new BaseMinionMove()).m_moveID = this.m_currFirstMinionMoveID + param1;
         _loc10_.m_moveClass = this.m_currMinionMoveClass;
         _loc10_.m_moveTier = param1;
         _loc10_.m_enemiesItHits = param6;
         _loc10_.m_accuracy = param7;
         _loc10_.m_visualMoveID = this.m_currMinionMoveVisuals;
         _loc10_.m_visualDOTMoveID = this.m_currMinionDOTMoveVisuals;
         _loc10_.m_moveIcon = this.m_currMoveIconName;
         _loc10_.m_moveType = MinionType.TYPE_ENERGY;
         _loc10_.m_moveName = param2;
         _loc10_.m_damage = param3;
         _loc10_.m_additionalRandomDamage = param4;
         _loc10_.m_energyUsed = param5;
         _loc10_.m_moveCoolDownTime = param8;
         _loc10_.m_stunChance = param9;
         this.m_allMoves[_loc10_.m_moveID] = _loc10_;
         return _loc10_;
      }
      
      private function old_EarthCM(param1:int, param2:String, param3:int, param4:int, param5:int, param6:int = 0, param7:int = 0, param8:int = 1, param9:Boolean = false) : BaseMinionMove
      {
         var _loc10_:BaseMinionMove = null;
         (_loc10_ = new BaseMinionMove()).m_moveID = this.m_currFirstMinionMoveID + param1;
         _loc10_.m_moveClass = this.m_currMinionMoveClass;
         _loc10_.m_moveTier = param1;
         _loc10_.m_visualMoveID = this.m_currMinionMoveVisuals;
         _loc10_.m_visualDOTMoveID = this.m_currMinionDOTMoveVisuals;
         _loc10_.m_moveIcon = this.m_currMoveIconName;
         _loc10_.m_moveType = MinionType.TYPE_EARTH;
         _loc10_.m_enemiesItHits = param8;
         _loc10_.m_moveName = param2;
         _loc10_.m_damage = param3;
         _loc10_.m_additionalRandomDamage = param4;
         _loc10_.m_energyUsed = param5;
         _loc10_.m_moveCoolDownTime = param7;
         _loc10_.m_hitsRandomTargets = param9;
         _loc10_.m_armor = param6;
         this.m_allMoves[_loc10_.m_moveID] = _loc10_;
         return _loc10_;
      }
      
      public function GetMove(param1:int) : BaseMinionMove
      {
         return this.m_allMoves[param1];
      }
   }
}
