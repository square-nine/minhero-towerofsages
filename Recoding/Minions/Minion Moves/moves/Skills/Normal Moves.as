//normal moves
      private function CreateNormalMoves() : void
      {
         var _loc1_:BaseMinionMove = null;
         var _loc2_:Array = null;
         var _loc3_:Array = null;
         _loc1_ = this.CreateMove("Claw",2,MinionMoveClasses.claw,MinionMoveID.claw_t1,"moveIcon_claw",MinionType.TYPE_NORMAL,MinionVisualMoveID.VM_claw);
         _loc1_.m_damage = 20;
         _loc1_ = this.CopyMove(_loc1_,5);
         _loc1_.m_damage = 30;
         _loc1_ = this.CopyMove(_loc1_,15);
         _loc1_.m_damage = 35;
         _loc1_.m_additionalRandomDamage = 10;
         _loc1_ = this.CopyMove(_loc1_,20);
         _loc1_.m_damage = 50;
         _loc1_.m_additionalRandomDamage = 15;
         _loc1_ = this.CopyMove(_loc1_,30,"Blood Swipes");
         _loc1_.m_damage = 50;
         _loc1_.m_additionalRandomDamage = 20;
         _loc1_.m_selfHeal = 20;
         this.m_currMinionMoveClass = MinionMoveClasses.tackle;
         this.m_currFirstMinionMoveID = MinionMoveID.tackle_t1;
         this.m_currMoveIconName = "moveIcon_tackle";
         this.m_currMinionMoveVisuals = MinionVisualMoveID.VISUALS_SameAsClass;
         _loc1_ = this.old_NormalCM(0,"Tackle",25,0,0,3);
         _loc1_ = this.old_NormalCM(1,"Tackle  lv.2",35,0,0,7);
         _loc1_ = this.old_NormalCM(2,"Tackle  lv.3",45,0,0,15);
         _loc1_ = this.old_NormalCM(3,"Tackle  lv.4",55,0,0,20);
         _loc1_ = this.old_NormalCM(4,"Thrash",90,0,0,35);
         this.m_currMinionMoveClass = MinionMoveClasses.poison_tooth;
         this.m_currFirstMinionMoveID = MinionMoveID.poison_tooth_t1;
         this.m_currMoveIconName = "moveIcon_poisonTooth";
         this.m_currMinionMoveVisuals = MinionVisualMoveID.VM_poison_tooth;
         this.m_currMinionDOTMoveVisuals = MinionVisualMoveID.VM_poisonToothPoisonBubbles;
         _loc1_ = this.old_NormalCM(0,"Poison Tooth",20,0,5,6);
         _loc1_ = this.old_NormalCM(1,"Poison Tooth  lv.2",25,0,8,10);
         _loc1_ = this.old_NormalCM(2,"Poison Tooth  lv.3",30,0,10,15);
         _loc1_ = this.old_NormalCM(3,"Poison Tooth  lv.4",35,0,13,20);
         _loc1_ = this.old_NormalCM(4,"Toxic Fang",50,0,20,35);
         this.m_currMinionMoveClass = MinionMoveClasses.reckless_dash;
         this.m_currFirstMinionMoveID = MinionMoveID.reckless_dash_t1;
         this.m_currMoveIconName = "moveIcon_recklessDash";
         this.m_currMinionMoveVisuals = MinionVisualMoveID.VISUALS_SameAsClass;
         _loc1_ = this.old_NormalCM(0,"Reckless Dash",35,0,0,6);
         _loc1_.m_selfDamage = 5;
         _loc1_ = this.old_NormalCM(1,"Reckless Dash  lv.2",45,0,0,10);
         _loc1_.m_selfDamage = 8;
         _loc1_ = this.old_NormalCM(2,"Reckless Dash  lv.3",55,0,0,15);
         _loc1_.m_selfDamage = 10;
         _loc1_ = this.old_NormalCM(3,"Reckless Dash  lv.4",70,0,0,25);
         _loc1_.m_selfDamage = 15;
         _loc1_ = this.old_NormalCM(4,"Desperate Barrage",150,0,0,35);
         _loc1_.m_selfDamage = 50;
         this.m_currMinionMoveClass = MinionMoveClasses.crush;
         this.m_currFirstMinionMoveID = MinionMoveID.crush_t1;
         this.m_currMoveIconName = "moveIcon_crush";
         this.m_currMinionMoveVisuals = MinionVisualMoveID.VISUALS_SameAsClass;
         _loc1_ = this.old_NormalCM(0,"Crush",20,0,0,6);
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_.m_stagesOfStatTypeToDeBuff = -1;
         _loc1_.m_chanceToDeBuff = 10;
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_ = this.old_NormalCM(1,"Crush  lv.2",30,0,0,14);
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_.m_stagesOfStatTypeToDeBuff = -1;
         _loc1_.m_chanceToDeBuff = 10;
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_ = this.old_NormalCM(2,"Crush  lv.3",40,0,0,28);
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_.m_stagesOfStatTypeToDeBuff = -1;
         _loc1_.m_chanceToDeBuff = 10;
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_ = this.old_NormalCM(3,"Crush  lv.4",50,0,0,35);
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_.m_stagesOfStatTypeToDeBuff = -1;
         _loc1_.m_chanceToDeBuff = 10;
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_ = this.old_NormalCM(4,"Overwhelm",80,0,0,40);
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_.m_stagesOfStatTypeToDeBuff = -1;
         _loc1_.m_chanceToDeBuff = 10;
         _loc1_.m_doesDeBuffTargets = true;
         this.m_currMinionMoveClass = MinionMoveClasses.roar;
         this.m_currFirstMinionMoveID = MinionMoveID.roar_t1;
         this.m_currMoveIconName = "moveIcon_roar";
         this.m_currMinionMoveVisuals = MinionVisualMoveID.VM_roar;
         _loc1_ = this.old_NormalCM(0,"Roar",0,0,0,3);
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_.m_stagesOfStatTypeToDeBuff = -1;
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_ = this.old_NormalCM(1,"Roar  lv.2",0,0,0,10);
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_.m_stagesOfStatTypeToDeBuff = -2;
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_ = this.old_NormalCM(2,"Roar  lv.3",0,0,0,20);
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_.m_stagesOfStatTypeToDeBuff = -3;
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_ = this.old_NormalCM(3,"Roar  lv.4",0,0,0,30);
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_.m_stagesOfStatTypeToDeBuff = -4;
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_ = this.old_NormalCM(4,"Demoralize",0,0,0,50);
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_.m_stagesOfStatTypeToDeBuff = -6;
         _loc1_.m_doesDeBuffTargets = true;
         this.m_currMinionMoveClass = MinionMoveClasses.desperation;
         this.m_currFirstMinionMoveID = MinionMoveID.desperation_t1;
         this.m_currMoveIconName = "moveIcon_ashenReminder";
         this.m_currMinionMoveVisuals = MinionVisualMoveID.VM_desperation;
         _loc1_ = this.old_FireCM(0,"Desperation",20,0,0,0,0);
         _loc1_.m_selfDamage = 10;
         _loc1_.m_selfPercentageDamage = 20;
         _loc1_.m_moveType = MinionType.TYPE_NORMAL;
         _loc1_ = this.CreateMove("Spike",1,MinionMoveClasses.spike,MinionMoveID.spike_t1,"moveIcon_spike",MinionType.TYPE_NORMAL,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_moveCoolDownTime = 1;
         _loc1_.m_damage = 20;
         _loc1_.m_accuracy = 95;
         _loc1_ = this.CopyMove(_loc1_,1);
         _loc1_.m_damage = 30;
         _loc1_.m_accuracy = 90;
         _loc1_ = this.CopyMove(_loc1_,1);
         _loc1_.m_damage = 35;
         _loc1_.m_accuracy = 85;
         _loc1_ = this.CopyMove(_loc1_,1);
         _loc1_.m_damage = 45;
         _loc1_.m_accuracy = 80;
         _loc1_ = this.CopyMove(_loc1_,1,"Hookshot");
         _loc1_.m_damage = 45;
         _loc1_.m_accuracy = 100;
         _loc1_ = this.CreateMove("Pound",3,MinionMoveClasses.pound,MinionMoveID.pound_t1,"moveIcon_pound",MinionType.TYPE_NORMAL,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = 20;
         _loc1_ = this.CopyMove(_loc1_,7);
         _loc1_.m_damage = 30;
         _loc1_ = this.CopyMove(_loc1_,15);
         _loc1_.m_damage = 40;
         _loc1_ = this.CopyMove(_loc1_,20);
         _loc1_.m_damage = 50;
         _loc1_ = this.CopyMove(_loc1_,35,"Slam");
         _loc1_.m_damage = 80;
         _loc2_ = new Array(2,5,10,15,25);
         _loc3_ = new Array(30,40,50,60,100);
         _loc1_ = this.CreateMove("Grind",_loc2_[0],MinionMoveClasses.grind,MinionMoveID.grind_t1,"moveIcon_grind",MinionType.TYPE_NORMAL,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_chanceToBuff = 10;
         _loc1_.m_doesBuffTargets = true;
         _loc1_.m_stagesOfStatTypeToBuff = 1;
         _loc1_.AddStatToBuff(StatType.STAT_ATTACK);
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_damage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Pulverize");
         _loc1_.m_chanceToBuff = 20;
         _loc1_.m_damage = _loc3_[4];
         _loc2_ = new Array(2,5,5,5,5);
         _loc3_ = new Array(40,50,75,100,180);
         _loc1_ = this.CreateMove("Wild Lance",_loc2_[0],MinionMoveClasses.wild_lance,MinionMoveID.wild_lance_t1,"moveIcon_wildLance",MinionType.TYPE_NORMAL,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_damage = _loc3_[0];
         _loc1_.m_doesDeBuffSelf = true;
         _loc1_.m_stagesOfStatTypeToDeBuff = -1;
         _loc1_.AddStatToDeBuff(StatType.STAT_ATTACK);
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_damage = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_stagesOfStatTypeToDeBuff = -2;
         _loc1_.m_damage = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_damage = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Heedless Puncture");
         _loc1_.m_stagesOfStatTypeToDeBuff = -4;
         _loc1_.m_damage = _loc3_[4];
         _loc2_ = new Array(3,10,20,30,50);
         _loc3_ = new Array(-1,-2,-3,-4,-5);
         _loc1_ = this.CreateMove("Slow",_loc2_[0],MinionMoveClasses.slow,MinionMoveID.slow_t1,"moveIcon_slow",MinionType.TYPE_NORMAL,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[0];
         _loc1_.AddStatToDeBuff(StatType.STAT_SPEED);
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Cripple");
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[4];
         _loc2_ = new Array(6,10,15,25,35);
         _loc3_ = new Array(50,75,100,125,150);
         _loc1_ = this.CreateMove("Reflect Damage",_loc2_[0],MinionMoveClasses.reflect_damage,MinionMoveID.reflect_damage_t1,"moveIcon_mirrorSkin",MinionType.TYPE_NORMAL,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_setReflectDamageAmount = _loc3_[0];
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_setReflectDamageAmount = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_setReflectDamageAmount = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_setReflectDamageAmount = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Diamond Skin");
         _loc1_.m_setReflectDamageAmount = _loc3_[4];
         _loc2_ = new Array(3,10,20,30,50);
         _loc3_ = new Array(-1,-2,-3,-4,-5);
         _loc1_ = this.CreateMove("Tire",_loc2_[0],MinionMoveClasses.tire,MinionMoveID.tire_t1,"moveIcon_tire",MinionType.TYPE_NORMAL,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_doesDeBuffTargets = true;
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[0];
         _loc1_.AddStatToDeBuff(StatType.STAT_ENERGY);
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[3];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4],"Exhaust");
         _loc1_.m_stagesOfStatTypeToDeBuff = _loc3_[4];
         _loc2_ = new Array(0,0,0,0,0);
         _loc3_ = new Array(50,75,100,100,100);
         _loc1_ = this.CreateMove("Energize",_loc2_[0],MinionMoveClasses.energize,MinionMoveID.energize_t1,"moveIcon_energize",MinionType.TYPE_NORMAL,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_energyPercentageRestored = _loc3_[0];
         _loc1_.m_moveCoolDownTime = 5;
         _loc1_.m_enemiesItHits = 0;
         _loc1_.m_alliesItHits = 1;
         _loc1_.m_onlyHitsSelf = true;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_energyPercentageRestored = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_energyPercentageRestored = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_energyPercentageRestored = _loc3_[3];
         _loc1_.m_moveCoolDownTime = 3;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4]);
         _loc1_.m_energyPercentageRestored = _loc3_[4];
         _loc1_.m_moveCoolDownTime = 1;
         _loc2_ = new Array(0,0,0,0,0);
         _loc3_ = new Array(50,75,100,100,100);
         _loc1_ = this.CreateMove("Invigorate",_loc2_[0],MinionMoveClasses.invigorate,MinionMoveID.invigorate_t1,"moveIcon_swiftMend",MinionType.TYPE_NORMAL,MinionVisualMoveID.VISUALS_SameAsClass);
         _loc1_.m_energyPercentageRestored = _loc3_[0];
         _loc1_.m_moveCoolDownTime = 5;
         _loc1_.m_alliesItHits = 1;
         _loc1_.m_enemiesItHits = 0;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[1]);
         _loc1_.m_energyPercentageRestored = _loc3_[1];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[2]);
         _loc1_.m_energyPercentageRestored = _loc3_[2];
         _loc1_ = this.CopyMove(_loc1_,_loc2_[3]);
         _loc1_.m_energyPercentageRestored = _loc3_[3];
         _loc1_.m_moveCoolDownTime = 3;
         _loc1_ = this.CopyMove(_loc1_,_loc2_[4]);
         _loc1_.m_energyPercentageRestored = _loc3_[4];
         _loc1_.m_moveCoolDownTime = 1;
      }

    //normal-specific move creation
      private function old_NormalCM(param1:int, param2:String, param3:int, param4:int, param5:int, param6:int, param7:int = 100, param8:int = 0) : BaseMinionMove
      {
         var _loc9_:BaseMinionMove = null;
         (_loc9_ = new BaseMinionMove()).m_moveID = this.m_currFirstMinionMoveID + param1;
         _loc9_.m_moveClass = this.m_currMinionMoveClass;
         _loc9_.m_moveTier = param1;
         _loc9_.m_enemiesItHits = 1;
         _loc9_.m_accuracy = param7;
         _loc9_.m_visualMoveID = this.m_currMinionMoveVisuals;
         _loc9_.m_visualDOTMoveID = this.m_currMinionDOTMoveVisuals;
         _loc9_.m_moveIcon = this.m_currMoveIconName;
         _loc9_.m_moveType = MinionType.TYPE_NORMAL;
         _loc9_.m_moveName = param2;
         _loc9_.m_damage = param3;
         _loc9_.m_additionalRandomDamage = param4;
         _loc9_.m_DOTDamage = param5;
         _loc9_.m_energyUsed = param6;
         _loc9_.m_moveCoolDownTime = param8;
         this.m_allMoves[_loc9_.m_moveID] = _loc9_;
         return _loc9_;
      }